[{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"06NFFz2nlEv6NTYfjv0sJK","name":"replay","rect":{"x":3,"y":3,"width":128,"height":131},"offset":{"x":0,"y":-1.5},"originalSize":{"width":134,"height":134},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.AnimationClip","_name":"clickItem","_duration":0.3333333333333333,"_keys":[[0,0.16666666666666666,0.3333333333333333],[0,0.16666666666666666,0.3333333333333333],[0,0.16666666666666666,0.3333333333333333]],"curveDatas":{},"_curves":[{"modifiers":[{"__type__":"cc.HierachyModifier","path":"/"},"position"],"data":{"keys":0,"values":[{"__type__":"cc.Vec3"},{"__type__":"cc.Vec3","y":-60},{"__type__":"cc.Vec3"}],"easingMethods":[null,null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"/"},"scale"],"data":{"keys":1,"values":[{"__type__":"cc.Vec3","x":1,"y":1,"z":1},{"__type__":"cc.Vec3","x":0.8,"y":0.8,"z":1},{"__type__":"cc.Vec3","x":1,"y":1,"z":1}],"easingMethods":[null,null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"/"},{"__type__":"cc.ComponentModifier","component":"cc.SpriteComponent"},"color"],"data":{"keys":2,"values":[{"__type__":"cc.Color","r":255,"g":255,"b":255},{"__type__":"cc.Color","r":255,"g":255,"b":255,"a":125},{"__type__":"cc.Color","r":255,"g":255,"b":255}],"easingMethods":[null,null,null]}}]},{"__type__":"cc.AnimationClip","_name":"hideItems2","speed":0.4,"_duration":0.4166666666666667,"_keys":[[0,0.16666666666666666],[0,0.16666666666666666],[0,0.16666666666666666],[0,0.16666666666666666],[0.05,0.2],[0.05,0.2],[0.05,0.2],[0.05,0.2],[0.18333333333333332,0.23333333333333334],[0.18333333333333332,0.23333333333333334],[0.23333333333333334,0.31666666666666665],[0.23333333333333334,0.31666666666666665],[0.23333333333333334,0.31666666666666665],[0.18333333333333332,0.23333333333333334],[0.2833333333333333,0.4166666666666667]],"curveDatas":{},"_curves":[{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/gift/wrap"},"position"],"data":{"keys":0,"values":[{"__type__":"cc.Vec3"},{"__type__":"cc.Vec3","y":-100}],"easingMethods":["quadIn",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/gift/wrap"},"scale"],"data":{"keys":1,"values":[{"__type__":"cc.Vec3","x":1,"y":1,"z":1},{"__type__":"cc.Vec3","x":0.65,"y":0.65,"z":1}],"easingMethods":["quadIn",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/gift/wrap"},{"__type__":"cc.ComponentModifier","component":"cc.SpriteComponent"},"color"],"data":{"keys":2,"values":[{"__type__":"cc.Color","r":255,"g":255,"b":255},{"__type__":"cc.Color","r":255,"g":255,"b":255,"a":90}],"easingMethods":["quadIn",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/gift/wrap"},"active"],"data":{"keys":3,"values":[true,false],"easingMethods":["quartIn",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/suo/wrap"},"position"],"data":{"keys":4,"values":[{"__type__":"cc.Vec3"},{"__type__":"cc.Vec3","y":-100}],"easingMethods":["quadIn",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/suo/wrap"},"scale"],"data":{"keys":5,"values":[{"__type__":"cc.Vec3","x":1,"y":1,"z":1},{"__type__":"cc.Vec3","x":0.8,"y":0.8,"z":1}],"easingMethods":["quadIn",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/suo/wrap"},"active"],"data":{"keys":6,"values":[true,false],"easingMethods":["quadIn",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/suo/wrap"},{"__type__":"cc.ComponentModifier","component":"cc.SpriteComponent"},"color"],"data":{"keys":7,"values":[{"__type__":"cc.Color","r":255,"g":255,"b":255},{"__type__":"cc.Color","r":255,"g":255,"b":255,"a":90}],"easingMethods":["quadIn",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/mode/wrap"},"position"],"data":{"keys":8,"values":[{"__type__":"cc.Vec3"},{"__type__":"cc.Vec3","y":-20}],"easingMethods":[null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/mode/wrap"},"active"],"data":{"keys":9,"values":[true,false],"easingMethods":[null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"top/best"},"scale"],"data":{"keys":10,"values":[{"__type__":"cc.Vec3","x":1,"y":1,"z":1},{"__type__":"cc.Vec3","x":0.5,"y":0.5,"z":1}],"easingMethods":[null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"top/best"},{"__type__":"cc.ComponentModifier","component":"cc.SpriteComponent"},"color"],"data":{"keys":11,"values":[{"__type__":"cc.Color","r":255,"g":255,"b":255},{"__type__":"cc.Color","r":255,"g":255,"b":255,"a":86}],"easingMethods":[null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"top/best"},"active"],"data":{"keys":12,"values":[true,false],"easingMethods":[null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/mode/wrap"},"scale"],"data":{"keys":13,"values":[{"__type__":"cc.Vec3","x":1,"y":1,"z":1},{"__type__":"cc.Vec3","x":0.9,"y":0.9,"z":1}],"easingMethods":[null,null]}},{"modifiers":[{"__type__":"cc.ComponentModifier","component":"cc.SpriteComponent"},"color"],"data":{"keys":14,"values":[{"__type__":"cc.Color","r":251,"g":251,"b":246,"a":146},{"__type__":"cc.Color","r":251,"g":251,"b":246,"a":0}],"easingMethods":[null,null]}}]},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"11sAvf1LZPta6e1OIdzmBE","name":"title_white","rect":{"x":0,"y":0,"width":295,"height":95},"offset":{"x":0,"y":0},"originalSize":{"width":295,"height":95},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.Mesh","_native":".bin","_struct":{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"geometricInfo":{"view":{"offset":1152,"length":288,"count":72,"stride":4}},"indexView":{"offset":1440,"length":72,"count":36,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":1152,"count":24,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":43,"isNormalized":false}]}],"minPosition":{"__type__":"cc.Vec3","x":-0.5,"y":-0.5,"z":-0.5},"maxPosition":{"__type__":"cc.Vec3","x":0.5,"y":0.5,"z":0.5}},"_dataLength":1512},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.EffectAsset","_name":"builtin-standard","techniques":[{"name":"opaque","passes":[{"program":"builtin-standard|standard-vs:vert|standard-fs:frag","properties":{"tilingOffset":{"value":[1,1,0,0],"type":16},"albedo":{"value":[1,1,1,1],"type":16},"albedoScale":{"value":[1,1,1,0],"type":16},"pbrParams":{"value":[0.8,0.6,1,1],"type":16},"pbrScale":{"value":[1,1,1,1],"type":16},"emissive":{"value":[0,0,0,1],"type":16},"emissiveScale":{"value":[1,1,1,1],"type":16},"albedoMap":{"value":"grey","type":28},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28}}}]},{"name":"transparent","passes":[{"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"program":"builtin-standard|standard-vs:vert|standard-fs:frag","depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"tilingOffset":{"value":[1,1,0,0],"type":16},"albedo":{"value":[1,1,1,1],"type":16},"albedoScale":{"value":[1,1,1,0],"type":16},"pbrParams":{"value":[0.8,0.6,1,1],"type":16},"pbrScale":{"value":[1,1,1,1],"type":16},"emissive":{"value":[0,0,0,1],"type":16},"emissiveScale":{"value":[1,1,1,1],"type":16},"albedoMap":{"value":"grey","type":28},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28}}}]}],"shaders":[{"hash":2481836677,"glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  vec4 cc_time;\n  vec4 cc_screenSize;\n  vec4 cc_screenScale;\n  vec4 cc_nativeSize;\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_exposure;\n  vec4 cc_mainLitDir;\n  vec4 cc_mainLitColor;\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\n\n#if CC_USE_BATCHING\n  in float a_dyn_batch_id;\n  uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\nuniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n};\n\n#endif\n\nvoid CCGetWorldMatrix (out highp mat4 matWorld) {\n  #if CC_USE_BATCHING\n    matWorld = cc_matWorlds[int(a_dyn_batch_id + 0.5)];\n  #else\n    matWorld = cc_matWorld;\n  #endif\n}\n\nvoid CCGetWorldMatrixFull (out highp mat4 matWorld, out highp mat4 matWorldIT) {\n  #if CC_USE_BATCHING\n    matWorld = cc_matWorlds[int(a_dyn_batch_id + 0.5)];\n    matWorldIT = matWorld;\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n}\n\nstruct StandardAttributes {\n  vec4 position;\n  vec3 normal;\n  vec4 tangent;\n  int index;\n};\n\nin vec3 a_position;\nin vec3 a_normal;\nin vec4 a_tangent;\n\nvoid CCDecode (out StandardAttributes attr) {\n  attr.position = vec4(a_position, 1.0);\n  attr.normal = a_normal;\n  attr.tangent = a_tangent;\n}\n\n#if CC_USE_SKINNING\n\nin vec4 a_weights;\nin vec4 a_joints;\nuniform CCSkinningTexture {\n  highp vec4 cc_jointsTextureInfo;\n};\nuniform CCSkinningAnimation {\n  highp vec4 cc_jointsAnimInfo;\n};\nuniform sampler2D cc_jointsTexture;\n\n#if CC_USE_SKINNING == 1\n  highp float decode32(highp vec4 rgba) {\n    rgba = rgba * 255.0;\n    highp float Sign = 1.0 - step(128.0, rgba[3]) * 2.0;\n    highp float Exponent = 2.0 * mod(rgba[3], 128.0) + step(128.0, rgba[2]) - 127.0;\n    highp float Mantissa = mod(rgba[2], 128.0) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n    return Sign * exp2(Exponent - 23.0) * Mantissa;\n  }\n#endif\n\n#if CC_USE_SKINNING == 1\n  void getJointDQ(float i, out vec4 Qr, out vec4 Qt, out vec3 S) {\n    highp float j = 12.0 * (cc_jointsAnimInfo.x * i + cc_jointsAnimInfo.y) + cc_jointsTextureInfo.z;\n    highp float invSize = cc_jointsTextureInfo.y;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointsTextureInfo.x;\n    y = (y + 0.5) * invSize;\n    Qr = vec4(\n      decode32(texture(cc_jointsTexture, vec2((x + 0.5) * invSize, y))),\n      decode32(texture(cc_jointsTexture, vec2((x + 1.5) * invSize, y))),\n      decode32(texture(cc_jointsTexture, vec2((x + 2.5) * invSize, y))),\n      decode32(texture(cc_jointsTexture, vec2((x + 3.5) * invSize, y)))\n    );\n    Qt = vec4(\n      decode32(texture(cc_jointsTexture, vec2((x + 4.5) * invSize, y))),\n      decode32(texture(cc_jointsTexture, vec2((x + 5.5) * invSize, y))),\n      decode32(texture(cc_jointsTexture, vec2((x + 6.5) * invSize, y))),\n      decode32(texture(cc_jointsTexture, vec2((x + 7.5) * invSize, y)))\n    );\n    S = vec3(\n      decode32(texture(cc_jointsTexture, vec2((x + 8.5) * invSize, y))),\n      decode32(texture(cc_jointsTexture, vec2((x + 9.5) * invSize, y))),\n      decode32(texture(cc_jointsTexture, vec2((x + 10.5) * invSize, y)))\n    );\n  }\n#elif CC_USE_SKINNING == 2\n  void getJointDQ(float i, out vec4 Qr, out vec4 Qt, out vec3 S) {\n    highp float j = 3.0 * (cc_jointsAnimInfo.x * i + cc_jointsAnimInfo.y) + cc_jointsTextureInfo.z;\n    highp float invSize = cc_jointsTextureInfo.y;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointsTextureInfo.x;\n    y = (y + 0.5) * invSize;\n    Qr = texture(cc_jointsTexture, vec2((x + 0.5) * invSize, y));\n    Qt = texture(cc_jointsTexture, vec2((x + 1.5) * invSize, y));\n    S = texture(cc_jointsTexture, vec2((x + 2.5) * invSize, y)).xyz;\n  }\n#endif\nvoid skinRTS(out vec4 R, out vec3 T, out vec3 S) {\n  vec4 r, t, Qt = vec4(0.0); vec3 s;\n  R = vec4(0.0); S = vec3(0.0);\n\n  for (int i = 0; i < 4; i++) {\n    float w = a_weights[i];\n    getJointDQ(a_joints[i], r, t, s);\n    S += s * w; R += r * w; Qt += t * w;\n  }\n\n  float invNorm = 1.0 / length(R); R *= invNorm; Qt *= invNorm;\n  T = 2.0 * (R.w * Qt.xyz - Qt.w * R.xyz + cross(R.xyz, Qt.xyz));\n}\n\nvec3 VectorTransformQuat(vec3 v, vec4 Q) {\n  return v + 2.0 * cross(Q.xyz, cross(Q.xyz, v) + Q.w * v);\n}\n\nvoid CCSkin(inout vec4 position) {\n  vec4 R; vec3 T, S;\n  skinRTS(R, T, S);\n  position.xyz = VectorTransformQuat(position.xyz * S, R) + T;\n}\n\nvoid CCSkin(inout StandardAttributes attr) {\n  vec4 R; vec3 T, S;\n  skinRTS(R, T, S);\n  attr.position.xyz = VectorTransformQuat(attr.position.xyz * S, R) + T;\n  attr.normal = VectorTransformQuat(attr.normal, R);\n  attr.tangent.xyz = VectorTransformQuat(attr.tangent.xyz, R);\n}\n\n#endif\n\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n  int index;\n};\n\nvoid CCAttrToInput (in StandardAttributes attr, out StandardVertInput In) {\n  In.position = attr.position;\n  In.normal = attr.normal;\n  In.tangent = attr.tangent;\n  In.index = attr.index;\n}\n\nvoid CCVertInput (out StandardVertInput In) {\n  StandardAttributes attr;\n  CCDecode(attr);\n  #if CC_USE_SKINNING\n    CCSkin(attr);\n  #endif\n  CCAttrToInput(attr, In);\n}\n\nuniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScale;\n  vec4 pbrParams;\n  vec4 pbrScale;\n  vec4 emissive;\n  vec4 emissiveScale;\n};\n\n#if USE_VERTEX_COLOR\n  in vec3 a_color;\n  out vec3 v_color;\n#endif\n\nout vec3 v_position;\nout vec3 v_normal;\n#if USE_NORMAL_MAP\n  out vec3 v_tangent;\n  out vec3 v_bitangent;\n#endif\n\n#if USE_ALBEDO_MAP || USE_NORMAL_MAP || USE_PBR_MAP || USE_EMISSIVE_MAP || USE_METALLIC_ROUGHNESS_MAP || USE_OCCLUSION_MAP\n  in vec2 a_texCoord;\n  out vec2 v_uv;\n#endif\n\nhighp vec4 vert () {\n  StandardVertInput In;\n  CCVertInput(In);\n\n  highp mat4 matWorld, matWorldIT;\n  CCGetWorldMatrixFull(matWorld, matWorldIT);\n\n  highp vec4 pos = matWorld * In.position;\n\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  #if USE_NORMAL_MAP\n    v_tangent = normalize((matWorldIT * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  #endif\n\n  #if USE_ALBEDO_MAP || USE_NORMAL_MAP || USE_PBR_MAP || USE_EMISSIVE_MAP || USE_METALLIC_ROUGHNESS_MAP || USE_OCCLUSION_MAP\n    v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #endif\n\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n\n  return cc_matProj * (cc_matView * matWorld) * In.position;\n}\n\nvoid main() { gl_Position = vert(); }\n","frag":"\nprecision highp float;\nuniform CCGlobal {\n  vec4 cc_time;\n  vec4 cc_screenSize;\n  vec4 cc_screenScale;\n  vec4 cc_nativeSize;\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_exposure;\n  vec4 cc_mainLitDir;\n  vec4 cc_mainLitColor;\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\n\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\n\nvec3 unpackNormal(vec4 nmap) {\n  return nmap.xyz * 2.0 - 1.0;\n}\n\nvec3 unpackRGBE(vec4 rgbe) {\n    return rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n}\n#endif\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n\nvec3 SRGBToLinear(vec3 gamma)\n{\n\treturn pow(gamma, vec3(2.2));\n}\n\nvec3 LinearToSRGB(vec3 linear)\n{\n\treturn pow(linear, vec3(0.454545));\n}\nuniform CCForwardLight {\n  highp vec4 cc_sphereLitPos[2];\n  vec4 cc_sphereLitSizeRange[2];\n  vec4 cc_sphereLitColor[2];\n  highp vec4 cc_spotLitPos[2];\n  vec4 cc_spotLitSizeRangeAngle[2];\n  vec4 cc_spotLitDir[2];\n  vec4 cc_spotLitColor[2];\n};\n\nfloat SmoothDistAtt2(float distSqr, float invSqrAttRadius) {\n  float factor = distSqr * invSqrAttRadius;\n  float factor2 = factor * factor;\n  float factor3 = factor2 * factor2;\n  float smoothFactor = clamp(1.0 - factor3 * factor3, 0.0, 1.0);\n  return smoothFactor * smoothFactor;\n}\n\nfloat SmoothDistAtt(float distSqr, float invSqrAttRadius) {\n  float factor = distSqr * invSqrAttRadius;\n  float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n  return smoothFactor * smoothFactor;\n}\n\nfloat GetDistAtt(float distSqr, float invSqrAttRadius) {\n  float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n  attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n  return attenuation;\n}\n\nfloat GetAngleAtt(vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n  float cd = dot(litDir, L);\n  float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n  return (attenuation * attenuation);\n}\n\nfloat GGXMobile(float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\n\nfloat CalcSpecular(float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness*0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox(vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min( r.x * r.x, exp2( -9.28 * NoV ) ) * r.x + r.y;\n  vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\n\nvec3 CalcDynamicLighting(vec3 worldPos, vec3 N, vec3 V, vec3 diffuse, vec3 specular, float roughness) {\n  vec3 lighting = vec3(0.0);\n\n  vec3 diffuseContrib = diffuse / 3.14159265359;\n  for (int i = 0; i < 2; i++) {\n    vec3 PLU = cc_sphereLitPos[i].xyz - worldPos;\n    vec3 PL = normalize(PLU);\n    vec3 PH = normalize(PL + V);\n    float PNL = max(dot(N, PL), 0.001);\n    float PNH = max(dot(N, PH), 0.0);\n\n    float distSqr = dot(PLU, PLU);\n    float litRadius = cc_sphereLitSizeRange[i].x;\n    float litRadiusSqr = litRadius * litRadius;\n    float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n    float attRadiusSqrInv = 1.0 / max(cc_sphereLitSizeRange[i].y, 0.01);\n    attRadiusSqrInv *= attRadiusSqrInv;\n    float att = GetDistAtt(distSqr, attRadiusSqrInv);\n    vec3 lspec = specular * CalcSpecular(roughness, PNH, PH, N);\n    lighting += PNL * cc_sphereLitColor[i].rgb * cc_sphereLitColor[i].w * illum * att * (diffuseContrib + lspec);\n  }\n  for (int i = 0; i < 2; i++) {\n    vec3 SLU = cc_spotLitPos[i].xyz - worldPos;\n    vec3 SL = normalize(SLU);\n    vec3 SH = normalize(SL + V);\n    float SNL = max(dot(N, SL), 0.001);\n    float SNH = max(dot(N, SH), 0.0);\n\n    float distSqr = dot(SLU, SLU);\n    float litRadius = cc_spotLitSizeRangeAngle[i].x;\n    float litRadiusSqr = litRadius * litRadius;\n    float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n    float attRadiusSqrInv = 1.0 / max(cc_spotLitSizeRangeAngle[i].y, 0.01);\n    attRadiusSqrInv *= attRadiusSqrInv;\n\n    float cosInner = max(dot(-cc_spotLitDir[i].xyz, SL), 0.01);\n    float cosOuter = cc_spotLitSizeRangeAngle[i].z;\n    float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n    float litAngleOffset = -cosOuter * litAngleScale;\n    float att = GetDistAtt(distSqr, attRadiusSqrInv);\n    att *= GetAngleAtt(SL, -cc_spotLitDir[i].xyz, litAngleScale, litAngleOffset);\n\n    vec3 lspec = specular * CalcSpecular(roughness, SNH, SH, N);\n    lighting += SNL * cc_spotLitColor[i].rgb * cc_spotLitColor[i].w * illum * att * (diffuseContrib + lspec);\n  }\n\n  return lighting;\n}\n\nstruct StandardSurface {\n  vec4 albedo;\n  vec3 position;\n  vec3 normal;\n  vec3 emissive;\n  float roughness;\n  float metallic;\n  float occlusion;\n};\n\nvec4 CCStandardShading (StandardSurface s) {\n  vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n  vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n\n  vec3 N = normalize(s.normal);\n  vec3 V = normalize(cc_cameraPos.xyz - s.position);\n  vec3 L = normalize(-cc_mainLitDir.xyz);\n  vec3 H = normalize(L+V);\n  float NV = max(abs(dot(N, V)), 0.001);\n  float NL = max(dot(N, L), 0.001);\n  float NH = max(dot(N, H), 0.0);\n\n  specular = BRDFApprox(specular, s.roughness, NV);\n\n  vec3 diffuseContrib = diffuse / 3.14159265359;\n  vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n\n  vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w * (diffuseContrib + specularContrib);\n  finalColor += CalcDynamicLighting(s.position, N, V, diffuse, specular, s.roughness);\n\n  float fAmb = 0.5 - N.y * 0.5;\n  vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\n  finalColor += (ambDiff.rgb * diffuse);\n\n  #if CC_USE_IBL\n    vec3 R = normalize(reflect(-V, N));\n\n    vec4 envmap = textureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n\n    #if CC_USE_IBL == 2\n      vec3 env = unpackRGBE(envmap);\n    #else\n      vec3 env = SRGBToLinear(envmap.rgb) * cc_ambientSky.w;\n    #endif\n    finalColor += env * specular;\n  #endif\n\n  finalColor = finalColor * s.occlusion;\n\n  #if CC_USE_HDR\n    s.emissive *= cc_exposure.w;\n  #endif\n  finalColor += s.emissive;\n\n  return vec4(finalColor, s.albedo.a);\n}\n\nvec3 ACESToneMap(vec3 color) {\n    const float A = 2.51;\n    const float B = 0.03;\n    const float C = 2.43;\n    const float D = 0.59;\n    const float E = 0.14;\n    return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\n\nvec4 CCFragOutput (vec4 color) {\n  #if !CC_USE_HDR\n    color.rgb = ACESToneMap(color.rgb);\n    color.rgb = LinearToSRGB(color.rgb);\n  #endif\n  return color;\n}\n\nuniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScale;\n  vec4 pbrParams;\n  vec4 pbrScale;\n  vec4 emissive;\n  vec4 emissiveScale;\n};\n\nin vec3 v_position;\n\n#if USE_ALBEDO_MAP || USE_NORMAL_MAP || USE_PBR_MAP || USE_EMISSIVE_MAP || USE_METALLIC_ROUGHNESS_MAP || USE_OCCLUSION_MAP\n  in vec2 v_uv;\n#endif\n\n#if USE_VERTEX_COLOR\n  in vec3 v_color;\n#endif\n\nin vec3 v_normal;\n#if USE_NORMAL_MAP\n  in vec3 v_tangent;\n  in vec3 v_bitangent;\n#endif\n\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\n  uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\n  uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\n  uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\n  uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\n  uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\n\nvoid surf (out StandardSurface s) {\n  vec4 baseColor = albedo;\n  #if USE_VERTEX_COLOR\n    baseColor.rgb *= v_color;\n  #endif\n  #if USE_ALBEDO_MAP\n    vec4 texColor = texture(albedoMap, v_uv);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    baseColor *= texColor;\n  #endif\n  s.albedo = baseColor;\n  s.albedo.rgb *= albedoScale.xyz;\n\n  #if USE_ALPHA_TEST\n    if (s.albedo.ALPHA_TEST_CHANNEL < albedoScale.w) discard;\n  #endif\n\n  s.normal = v_normal;\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture(normalMap, v_uv).xyz - vec3(0.5);\n    s.normal =\n      (nmmp.x * pbrScale.w) * normalize(v_tangent) +\n      (nmmp.y * pbrScale.w) * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n\n  s.position = v_position;\n\n  vec4 pbr = pbrParams;\n  #if USE_PBR_MAP\n    pbr = texture(pbrMap, v_uv);\n  #endif\n  #if USE_METALLIC_ROUGHNESS_MAP\n    vec4 metallicRoughness = texture(metallicRoughnessMap, v_uv);\n    pbr.METALLIC_CHANNEL = metallicRoughness.METALLIC_CHANNEL;\n    pbr.ROUGHNESS_CHANNEL = metallicRoughness.ROUGHNESS_CHANNEL;\n  #endif\n  #if USE_OCCLUSION_MAP\n    pbr.OCCLUSION_CHANNEL = texture(occlusionMap, v_uv).OCCLUSION_CHANNEL;\n  #endif\n  pbr *= pbrScale;\n  s.roughness = clamp(pbr.ROUGHNESS_CHANNEL, 0.04, 1.0);\n  s.metallic = clamp(pbr.METALLIC_CHANNEL, 0.0, 0.96);\n  s.occlusion = pbr.OCCLUSION_CHANNEL;\n\n  s.emissive = emissive.rgb * emissiveScale.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture(emissiveMap, v_uv).rgb);\n  #endif\n}\n\nvec4 frag () {\n  StandardSurface s; surf(s);\n  vec4 color = CCStandardShading(s);\n  return CCFragOutput(color);\n}\n\nout vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }\n"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matView;\nuniform mat4 cc_matProj;\n\n#if CC_USE_BATCHING\n  attribute float a_dyn_batch_id;\n  uniform highp mat4 cc_matWorlds[10];\n\n#else\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matWorldIT;\n\n#endif\n\nvoid CCGetWorldMatrix (out highp mat4 matWorld) {\n  #if CC_USE_BATCHING\n    matWorld = cc_matWorlds[int(a_dyn_batch_id + 0.5)];\n  #else\n    matWorld = cc_matWorld;\n  #endif\n}\n\nvoid CCGetWorldMatrixFull (out highp mat4 matWorld, out highp mat4 matWorldIT) {\n  #if CC_USE_BATCHING\n    matWorld = cc_matWorlds[int(a_dyn_batch_id + 0.5)];\n    matWorldIT = matWorld;\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n}\n\nstruct StandardAttributes {\n  vec4 position;\n  vec3 normal;\n  vec4 tangent;\n  int index;\n};\n\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec4 a_tangent;\n\nvoid CCDecode (out StandardAttributes attr) {\n  attr.position = vec4(a_position, 1.0);\n  attr.normal = a_normal;\n  attr.tangent = a_tangent;\n}\n\n#if CC_USE_SKINNING\n\nattribute vec4 a_weights;\nattribute vec4 a_joints;\nuniform highp vec4 cc_jointsTextureInfo;\nuniform highp vec4 cc_jointsAnimInfo;\nuniform sampler2D cc_jointsTexture;\n\n#if CC_USE_SKINNING == 1\n  highp float decode32(highp vec4 rgba) {\n    rgba = rgba * 255.0;\n    highp float Sign = 1.0 - step(128.0, rgba[3]) * 2.0;\n    highp float Exponent = 2.0 * mod(rgba[3], 128.0) + step(128.0, rgba[2]) - 127.0;\n    highp float Mantissa = mod(rgba[2], 128.0) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n    return Sign * exp2(Exponent - 23.0) * Mantissa;\n  }\n#endif\n\n#if CC_USE_SKINNING == 1\n  void getJointDQ(float i, out vec4 Qr, out vec4 Qt, out vec3 S) {\n    highp float j = 12.0 * (cc_jointsAnimInfo.x * i + cc_jointsAnimInfo.y) + cc_jointsTextureInfo.z;\n    highp float invSize = cc_jointsTextureInfo.y;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointsTextureInfo.x;\n    y = (y + 0.5) * invSize;\n    Qr = vec4(\n      decode32(texture2D(cc_jointsTexture, vec2((x + 0.5) * invSize, y))),\n      decode32(texture2D(cc_jointsTexture, vec2((x + 1.5) * invSize, y))),\n      decode32(texture2D(cc_jointsTexture, vec2((x + 2.5) * invSize, y))),\n      decode32(texture2D(cc_jointsTexture, vec2((x + 3.5) * invSize, y)))\n    );\n    Qt = vec4(\n      decode32(texture2D(cc_jointsTexture, vec2((x + 4.5) * invSize, y))),\n      decode32(texture2D(cc_jointsTexture, vec2((x + 5.5) * invSize, y))),\n      decode32(texture2D(cc_jointsTexture, vec2((x + 6.5) * invSize, y))),\n      decode32(texture2D(cc_jointsTexture, vec2((x + 7.5) * invSize, y)))\n    );\n    S = vec3(\n      decode32(texture2D(cc_jointsTexture, vec2((x + 8.5) * invSize, y))),\n      decode32(texture2D(cc_jointsTexture, vec2((x + 9.5) * invSize, y))),\n      decode32(texture2D(cc_jointsTexture, vec2((x + 10.5) * invSize, y)))\n    );\n  }\n#elif CC_USE_SKINNING == 2\n  void getJointDQ(float i, out vec4 Qr, out vec4 Qt, out vec3 S) {\n    highp float j = 3.0 * (cc_jointsAnimInfo.x * i + cc_jointsAnimInfo.y) + cc_jointsTextureInfo.z;\n    highp float invSize = cc_jointsTextureInfo.y;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointsTextureInfo.x;\n    y = (y + 0.5) * invSize;\n    Qr = texture2D(cc_jointsTexture, vec2((x + 0.5) * invSize, y));\n    Qt = texture2D(cc_jointsTexture, vec2((x + 1.5) * invSize, y));\n    S = texture2D(cc_jointsTexture, vec2((x + 2.5) * invSize, y)).xyz;\n  }\n#endif\nvoid skinRTS(out vec4 R, out vec3 T, out vec3 S) {\n  vec4 r, t, Qt = vec4(0.0); vec3 s;\n  R = vec4(0.0); S = vec3(0.0);\n\n  for (int i = 0; i < 4; i++) {\n    float w = a_weights[i];\n    getJointDQ(a_joints[i], r, t, s);\n    S += s * w; R += r * w; Qt += t * w;\n  }\n\n  float invNorm = 1.0 / length(R); R *= invNorm; Qt *= invNorm;\n  T = 2.0 * (R.w * Qt.xyz - Qt.w * R.xyz + cross(R.xyz, Qt.xyz));\n}\n\nvec3 VectorTransformQuat(vec3 v, vec4 Q) {\n  return v + 2.0 * cross(Q.xyz, cross(Q.xyz, v) + Q.w * v);\n}\n\nvoid CCSkin(inout vec4 position) {\n  vec4 R; vec3 T, S;\n  skinRTS(R, T, S);\n  position.xyz = VectorTransformQuat(position.xyz * S, R) + T;\n}\n\nvoid CCSkin(inout StandardAttributes attr) {\n  vec4 R; vec3 T, S;\n  skinRTS(R, T, S);\n  attr.position.xyz = VectorTransformQuat(attr.position.xyz * S, R) + T;\n  attr.normal = VectorTransformQuat(attr.normal, R);\n  attr.tangent.xyz = VectorTransformQuat(attr.tangent.xyz, R);\n}\n\n#endif\n\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n  int index;\n};\n\nvoid CCAttrToInput (in StandardAttributes attr, out StandardVertInput In) {\n  In.position = attr.position;\n  In.normal = attr.normal;\n  In.tangent = attr.tangent;\n  In.index = attr.index;\n}\n\nvoid CCVertInput (out StandardVertInput In) {\n  StandardAttributes attr;\n  CCDecode(attr);\n  #if CC_USE_SKINNING\n    CCSkin(attr);\n  #endif\n  CCAttrToInput(attr, In);\n}\n\nuniform vec4 tilingOffset;\n\n#if USE_VERTEX_COLOR\n  attribute vec3 a_color;\n  varying vec3 v_color;\n#endif\n\nvarying vec3 v_position;\nvarying vec3 v_normal;\n#if USE_NORMAL_MAP\n  varying vec3 v_tangent;\n  varying vec3 v_bitangent;\n#endif\n\n#if USE_ALBEDO_MAP || USE_NORMAL_MAP || USE_PBR_MAP || USE_EMISSIVE_MAP || USE_METALLIC_ROUGHNESS_MAP || USE_OCCLUSION_MAP\n  attribute vec2 a_texCoord;\n  varying vec2 v_uv;\n#endif\n\nhighp vec4 vert () {\n  StandardVertInput In;\n  CCVertInput(In);\n\n  highp mat4 matWorld, matWorldIT;\n  CCGetWorldMatrixFull(matWorld, matWorldIT);\n\n  highp vec4 pos = matWorld * In.position;\n\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  #if USE_NORMAL_MAP\n    v_tangent = normalize((matWorldIT * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  #endif\n\n  #if USE_ALBEDO_MAP || USE_NORMAL_MAP || USE_PBR_MAP || USE_EMISSIVE_MAP || USE_METALLIC_ROUGHNESS_MAP || USE_OCCLUSION_MAP\n    v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #endif\n\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n\n  return cc_matProj * (cc_matView * matWorld) * In.position;\n}\n\nvoid main() { gl_Position = vert(); }\n","frag":"\n#if CC_USE_IBL\n  #ifdef GL_EXT_shader_texture_lod\n    #extension GL_EXT_shader_texture_lod : enable\n  #endif\n#endif\n\nprecision highp float;\nuniform vec4 cc_cameraPos;\nuniform vec4 cc_exposure;\nuniform vec4 cc_mainLitDir;\nuniform vec4 cc_mainLitColor;\nuniform vec4 cc_ambientSky;\nuniform vec4 cc_ambientGround;\n\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\n\nvec3 unpackNormal(vec4 nmap) {\n  return nmap.xyz * 2.0 - 1.0;\n}\n\nvec3 unpackRGBE(vec4 rgbe) {\n    return rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n}\n#endif\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n\nvec3 SRGBToLinear(vec3 gamma)\n{\n\treturn pow(gamma, vec3(2.2));\n}\n\nvec3 LinearToSRGB(vec3 linear)\n{\n\treturn pow(linear, vec3(0.454545));\n}\nuniform highp vec4 cc_sphereLitPos[2];\nuniform vec4 cc_sphereLitSizeRange[2];\nuniform vec4 cc_sphereLitColor[2];\nuniform highp vec4 cc_spotLitPos[2];\nuniform vec4 cc_spotLitSizeRangeAngle[2];\nuniform vec4 cc_spotLitDir[2];\nuniform vec4 cc_spotLitColor[2];\n\nfloat SmoothDistAtt2(float distSqr, float invSqrAttRadius) {\n  float factor = distSqr * invSqrAttRadius;\n  float factor2 = factor * factor;\n  float factor3 = factor2 * factor2;\n  float smoothFactor = clamp(1.0 - factor3 * factor3, 0.0, 1.0);\n  return smoothFactor * smoothFactor;\n}\n\nfloat SmoothDistAtt(float distSqr, float invSqrAttRadius) {\n  float factor = distSqr * invSqrAttRadius;\n  float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n  return smoothFactor * smoothFactor;\n}\n\nfloat GetDistAtt(float distSqr, float invSqrAttRadius) {\n  float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n  attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n  return attenuation;\n}\n\nfloat GetAngleAtt(vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n  float cd = dot(litDir, L);\n  float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n  return (attenuation * attenuation);\n}\n\nfloat GGXMobile(float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\n\nfloat CalcSpecular(float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness*0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox(vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min( r.x * r.x, exp2( -9.28 * NoV ) ) * r.x + r.y;\n  vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\n\nvec3 CalcDynamicLighting(vec3 worldPos, vec3 N, vec3 V, vec3 diffuse, vec3 specular, float roughness) {\n  vec3 lighting = vec3(0.0);\n\n  vec3 diffuseContrib = diffuse / 3.14159265359;\n  for (int i = 0; i < 2; i++) {\n    vec3 PLU = cc_sphereLitPos[i].xyz - worldPos;\n    vec3 PL = normalize(PLU);\n    vec3 PH = normalize(PL + V);\n    float PNL = max(dot(N, PL), 0.001);\n    float PNH = max(dot(N, PH), 0.0);\n\n    float distSqr = dot(PLU, PLU);\n    float litRadius = cc_sphereLitSizeRange[i].x;\n    float litRadiusSqr = litRadius * litRadius;\n    float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n    float attRadiusSqrInv = 1.0 / max(cc_sphereLitSizeRange[i].y, 0.01);\n    attRadiusSqrInv *= attRadiusSqrInv;\n    float att = GetDistAtt(distSqr, attRadiusSqrInv);\n    vec3 lspec = specular * CalcSpecular(roughness, PNH, PH, N);\n    lighting += PNL * cc_sphereLitColor[i].rgb * cc_sphereLitColor[i].w * illum * att * (diffuseContrib + lspec);\n  }\n  for (int i = 0; i < 2; i++) {\n    vec3 SLU = cc_spotLitPos[i].xyz - worldPos;\n    vec3 SL = normalize(SLU);\n    vec3 SH = normalize(SL + V);\n    float SNL = max(dot(N, SL), 0.001);\n    float SNH = max(dot(N, SH), 0.0);\n\n    float distSqr = dot(SLU, SLU);\n    float litRadius = cc_spotLitSizeRangeAngle[i].x;\n    float litRadiusSqr = litRadius * litRadius;\n    float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n    float attRadiusSqrInv = 1.0 / max(cc_spotLitSizeRangeAngle[i].y, 0.01);\n    attRadiusSqrInv *= attRadiusSqrInv;\n\n    float cosInner = max(dot(-cc_spotLitDir[i].xyz, SL), 0.01);\n    float cosOuter = cc_spotLitSizeRangeAngle[i].z;\n    float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n    float litAngleOffset = -cosOuter * litAngleScale;\n    float att = GetDistAtt(distSqr, attRadiusSqrInv);\n    att *= GetAngleAtt(SL, -cc_spotLitDir[i].xyz, litAngleScale, litAngleOffset);\n\n    vec3 lspec = specular * CalcSpecular(roughness, SNH, SH, N);\n    lighting += SNL * cc_spotLitColor[i].rgb * cc_spotLitColor[i].w * illum * att * (diffuseContrib + lspec);\n  }\n\n  return lighting;\n}\n\nstruct StandardSurface {\n  vec4 albedo;\n  vec3 position;\n  vec3 normal;\n  vec3 emissive;\n  float roughness;\n  float metallic;\n  float occlusion;\n};\n\nvec4 CCStandardShading (StandardSurface s) {\n  vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n  vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n\n  vec3 N = normalize(s.normal);\n  vec3 V = normalize(cc_cameraPos.xyz - s.position);\n  vec3 L = normalize(-cc_mainLitDir.xyz);\n  vec3 H = normalize(L+V);\n  float NV = max(abs(dot(N, V)), 0.001);\n  float NL = max(dot(N, L), 0.001);\n  float NH = max(dot(N, H), 0.0);\n\n  specular = BRDFApprox(specular, s.roughness, NV);\n\n  vec3 diffuseContrib = diffuse / 3.14159265359;\n  vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n\n  vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w * (diffuseContrib + specularContrib);\n  finalColor += CalcDynamicLighting(s.position, N, V, diffuse, specular, s.roughness);\n\n  float fAmb = 0.5 - N.y * 0.5;\n  vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\n  finalColor += (ambDiff.rgb * diffuse);\n\n  #if CC_USE_IBL\n    vec3 R = normalize(reflect(-V, N));\n\n    #ifdef GL_EXT_shader_texture_lod\n      vec4 envmap = textureCubeLodEXT(cc_environment, R, s.roughness * cc_ambientGround.w);\n    #else\n      vec4 envmap = textureCube(cc_environment, R);\n    #endif\n\n    #if CC_USE_IBL == 2\n      vec3 env = unpackRGBE(envmap);\n    #else\n      vec3 env = SRGBToLinear(envmap.rgb) * cc_ambientSky.w;\n    #endif\n    finalColor += env * specular;\n  #endif\n\n  finalColor = finalColor * s.occlusion;\n\n  #if CC_USE_HDR\n    s.emissive *= cc_exposure.w;\n  #endif\n  finalColor += s.emissive;\n\n  return vec4(finalColor, s.albedo.a);\n}\n\nvec3 ACESToneMap(vec3 color) {\n    const float A = 2.51;\n    const float B = 0.03;\n    const float C = 2.43;\n    const float D = 0.59;\n    const float E = 0.14;\n    return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\n\nvec4 CCFragOutput (vec4 color) {\n  #if !CC_USE_HDR\n    color.rgb = ACESToneMap(color.rgb);\n    color.rgb = LinearToSRGB(color.rgb);\n  #endif\n  return color;\n}\n\nuniform vec4 albedo;\nuniform vec4 albedoScale;\nuniform vec4 pbrParams;\nuniform vec4 pbrScale;\nuniform vec4 emissive;\nuniform vec4 emissiveScale;\n\nvarying vec3 v_position;\n\n#if USE_ALBEDO_MAP || USE_NORMAL_MAP || USE_PBR_MAP || USE_EMISSIVE_MAP || USE_METALLIC_ROUGHNESS_MAP || USE_OCCLUSION_MAP\n  varying vec2 v_uv;\n#endif\n\n#if USE_VERTEX_COLOR\n  varying vec3 v_color;\n#endif\n\nvarying vec3 v_normal;\n#if USE_NORMAL_MAP\n  varying vec3 v_tangent;\n  varying vec3 v_bitangent;\n#endif\n\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\n  uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\n  uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\n  uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\n  uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\n  uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\n\nvoid surf (out StandardSurface s) {\n  vec4 baseColor = albedo;\n  #if USE_VERTEX_COLOR\n    baseColor.rgb *= v_color;\n  #endif\n  #if USE_ALBEDO_MAP\n    vec4 texColor = texture2D(albedoMap, v_uv);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    baseColor *= texColor;\n  #endif\n  s.albedo = baseColor;\n  s.albedo.rgb *= albedoScale.xyz;\n\n  #if USE_ALPHA_TEST\n    if (s.albedo.ALPHA_TEST_CHANNEL < albedoScale.w) discard;\n  #endif\n\n  s.normal = v_normal;\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture2D(normalMap, v_uv).xyz - vec3(0.5);\n    s.normal =\n      (nmmp.x * pbrScale.w) * normalize(v_tangent) +\n      (nmmp.y * pbrScale.w) * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n\n  s.position = v_position;\n\n  vec4 pbr = pbrParams;\n  #if USE_PBR_MAP\n    pbr = texture2D(pbrMap, v_uv);\n  #endif\n  #if USE_METALLIC_ROUGHNESS_MAP\n    vec4 metallicRoughness = texture2D(metallicRoughnessMap, v_uv);\n    pbr.METALLIC_CHANNEL = metallicRoughness.METALLIC_CHANNEL;\n    pbr.ROUGHNESS_CHANNEL = metallicRoughness.ROUGHNESS_CHANNEL;\n  #endif\n  #if USE_OCCLUSION_MAP\n    pbr.OCCLUSION_CHANNEL = texture2D(occlusionMap, v_uv).OCCLUSION_CHANNEL;\n  #endif\n  pbr *= pbrScale;\n  s.roughness = clamp(pbr.ROUGHNESS_CHANNEL, 0.04, 1.0);\n  s.metallic = clamp(pbr.METALLIC_CHANNEL, 0.0, 0.96);\n  s.occlusion = pbr.OCCLUSION_CHANNEL;\n\n  s.emissive = emissive.rgb * emissiveScale.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture2D(emissiveMap, v_uv).rgb);\n  #endif\n}\n\nvec4 frag () {\n  StandardSurface s; surf(s);\n  vec4 color = CCStandardShading(s);\n  return CCFragOutput(color);\n}\n\nvoid main() { gl_FragColor = frag(); }\n"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[{"name":"cc_environment","defines":["CC_USE_IBL"]}]},"locals":{"blocks":[{"name":"CCLocalBatched","defines":["CC_USE_BATCHING"]},{"name":"CCLocal","defines":[]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING"]},{"name":"CCForwardLight","defines":[]}],"samplers":[{"name":"cc_jointsTexture","defines":["CC_USE_SKINNING"]}]}},"defines":[{"name":"CC_USE_BATCHING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"number","range":[0,2]},{"name":"USE_VERTEX_COLOR","type":"boolean"},{"name":"USE_NORMAL_MAP","type":"boolean"},{"name":"USE_ALBEDO_MAP","type":"boolean"},{"name":"CC_USE_IBL","type":"number","range":[0,2]},{"name":"CC_USE_HDR","type":"boolean"},{"name":"USE_PBR_MAP","type":"boolean"},{"name":"USE_METALLIC_ROUGHNESS_MAP","type":"boolean"},{"name":"USE_OCCLUSION_MAP","type":"boolean"},{"name":"USE_EMISSIVE_MAP","type":"boolean"},{"name":"ROUGHNESS_CHANNEL","type":"string","options":["r","g","b"]},{"name":"METALLIC_CHANNEL","type":"string","options":["g","r","b"]},{"name":"OCCLUSION_CHANNEL","type":"string","options":["b","r","g"]},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"ALPHA_TEST_CHANNEL","type":"string","options":["a","r","g","b"]}],"blocks":[{"name":"Constants","members":[{"name":"tilingOffset","type":16,"count":1},{"name":"albedo","type":16,"count":1},{"name":"albedoScale","type":16,"count":1},{"name":"pbrParams","type":16,"count":1},{"name":"pbrScale","type":16,"count":1},{"name":"emissive","type":16,"count":1},{"name":"emissiveScale","type":16,"count":1}],"defines":[],"binding":0}],"samplers":[{"name":"albedoMap","type":28,"count":1,"defines":["USE_ALBEDO_MAP"],"binding":30},{"name":"normalMap","type":28,"count":1,"defines":["USE_NORMAL_MAP"],"binding":31},{"name":"pbrMap","type":28,"count":1,"defines":["USE_PBR_MAP"],"binding":32},{"name":"metallicRoughnessMap","type":28,"count":1,"defines":["USE_METALLIC_ROUGHNESS_MAP"],"binding":33},{"name":"occlusionMap","type":28,"count":1,"defines":["USE_OCCLUSION_MAP"],"binding":34},{"name":"emissiveMap","type":28,"count":1,"defines":["USE_EMISSIVE_MAP"],"binding":35}],"name":"builtin-standard|standard-vs:vert|standard-fs:frag"}]},[{"__type__":"cc.SceneAsset","scene":{"__id__":1}},{"__type__":"cc.Scene","_name":"Scene","_children":[{"__id__":2},{"__id__":55},{"__id__":54},{"__id__":4},{"__id__":12},{"__id__":56},{"__id__":66}],"_globals":{"__type__":"cc.SceneGlobals","ambient":{"__type__":"cc.AmbientInfo"},"skybox":{"__type__":"cc.SkyboxInfo","_envmap":{"__uuid__":"6fD/CjddFM2IsDVtMk+gHH"}},"planarShadows":{"__type__":"cc.PlanarShadowInfo"}}},{"__type__":"cc.Node","_name":"CameCtr","_parent":{"__id__":1},"_components":[{"__type__":"34d13NYnH5F262CGRQw5jxI","node":{"__id__":2},"cubePrefab":{"__uuid__":"ceOVwgh6JJc4WtV7ACrmAe"},"targetPrefab":{"__uuid__":"5bbJzY5Y9CnZNOWoPade6w"},"cubeMtl":{"__uuid__":"c0zQeXMLBCZYZ/VcwCTcgt"},"targetMtl":{"__uuid__":"adL6vOCIVKmaVPUyH1lItf"},"cube_wrap":{"__id__":3},"gameUI":{"__id__":12},"testNode":{"__id__":48},"targetNode":{"__id__":5},"cubeRoot":{"__id__":4},"camera":{"__id__":53}}],"_id":"eaA+K/iwpJmLd7WwLSXkBQ"},{"__type__":"cc.Node","_name":"CubeWrap","_parent":{"__id__":4}},{"__type__":"cc.Node","_name":"CubeRoot","_parent":{"__id__":1},"_children":[{"__id__":3},{"__id__":5}],"_components":[{"__type__":"cc.AnimationComponent","_name":"CubeRoot<AnimationComponent>","node":{"__id__":4},"_clips":[{"__uuid__":"64Zqkj8S1BIrY/6CTvlqZG"}],"_defaultClip":{"__uuid__":"64Zqkj8S1BIrY/6CTvlqZG"}}],"_lrot":{"__type__":"cc.Quat","y":-0.3826834323650898,"w":0.9238795325112867},"_lscale":{"__type__":"cc.Vec3","x":0.8,"y":0.8,"z":0.8},"_euler":{"__type__":"cc.Vec3","y":-45},"_id":"bdf758sYtKPbfCvz7HTQGW"},{"__type__":"cc.Node","_name":"Target","_parent":{"__id__":4},"_children":[{"__id__":6},{"__id__":8}],"_components":[{"__type__":"51090x6WYNNipQMIjxIjiEh","_name":"Target<CubeRotate>","node":{"__id__":5},"_enabled":false,"overAnicom":{"__id__":7},"trailParticle":{"__id__":8}}]},{"__type__":"cc.Node","_name":"Cube","_parent":{"__id__":5},"_components":[{"__type__":"cc.ModelComponent","_name":"Cube<ModelComponent>","node":{"__id__":6},"_materials":[{"__uuid__":"adL6vOCIVKmaVPUyH1lItf"}],"_mesh":{"__uuid__":"12Y9dMgWdJKJGmTiZyQR9H@a804a"}},{"__id__":7}]},{"__type__":"cc.AnimationComponent","_name":"Cube<AnimationComponent>","node":{"__id__":6},"_clips":[{"__uuid__":"c5abgyie1BA551DE0hnGiu"}],"_defaultClip":{"__uuid__":"c5abgyie1BA551DE0hnGiu"}},{"__type__":"cc.Node","_name":"Trail","_parent":{"__id__":5},"_components":[{"__id__":9}],"_lpos":{"__type__":"cc.Vec3","z":-0.5}},{"__type__":"cc.ParticleSystemComponent","node":{"__id__":8},"_enabled":false,"_materials":[{"__uuid__":"d8/2G3BQhNT4Wkkhcg0TuK"}],"startColor":{"__type__":"cc.GradientRange","color":{"__type__":"cc.Color"},"gradient":{"__type__":"cc.Gradient"},"gradientMin":{"__type__":"cc.Gradient"},"gradientMax":{"__type__":"cc.Gradient"}},"startSizeX":{"__id__":10},"startSize":{"__id__":10},"startSizeY":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"startSizeZ":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"startSpeed":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"constant":3},"startRotationX":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"startRotationY":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"startRotationZ":{"__id__":11},"startRotation":{"__id__":11},"startDelay":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"startLifetime":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"constant":0.3},"duration":0.5,"loop":false,"gravityModifier":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"rateOverTime":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"constant":10},"rateOverDistance":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"colorOverLifetimeModule":{"__type__":"cc.ColorOvertimeModule","color":{"__type__":"cc.GradientRange","gradient":{"__type__":"cc.Gradient"},"gradientMin":{"__type__":"cc.Gradient"},"gradientMax":{"__type__":"cc.Gradient"}}},"shapeModule":{"__type__":"cc.ShapeModule","_shapeType":0,"shapeType":0,"arcSpeed":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"constant":1},"_scale":{"__type__":"cc.Vec3","x":0.8,"y":0.8,"z":0.8}},"sizeOvertimeModule":{"__type__":"cc.SizeOvertimeModule","size":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"x":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"y":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"z":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}}},"velocityOvertimeModule":{"__type__":"cc.VelocityOvertimeModule","x":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"y":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"z":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"speedModifier":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"constant":1}},"forceOvertimeModule":{"__type__":"cc.ForceOvertimeModule","x":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"y":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"z":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}}},"limitVelocityOvertimeModule":{"__type__":"cc.LimitVelocityOvertimeModule","limitX":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"limitY":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"limitZ":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"limit":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}}},"rotationOvertimeModule":{"__type__":"cc.RotationOvertimeModule","x":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"y":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"z":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}}},"textureAnimationModule":{"__type__":"cc.TextureAnimationModule","frameOverTime":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"startFrame":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}}},"trailModule":{"__type__":"cc.TrailModule","lifeTime":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"constant":1},"widthRatio":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},"colorOverTrail":{"__type__":"cc.GradientRange","gradient":{"__type__":"cc.Gradient"},"gradientMin":{"__type__":"cc.Gradient"},"gradientMax":{"__type__":"cc.Gradient"}},"colorOvertime":{"__type__":"cc.GradientRange","gradient":{"__type__":"cc.Gradient"},"gradientMin":{"__type__":"cc.Gradient"},"gradientMax":{"__type__":"cc.Gradient"}},"_particleSystem":{"__id__":9}},"renderer":{"__type__":"cc.ParticleSystemRenderer","_particleSystem":{"__id__":9}}},{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"constant":0.5},{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"time":0,"value":1,"inTangent":0,"outTangent":0},{"time":1,"value":1,"inTangent":0,"outTangent":0}]}},{"__type__":"cc.Node","_name":"Canvas","_parent":{"__id__":1},"_children":[{"__id__":13},{"__id__":32},{"__id__":35},{"__id__":45},{"__id__":46},{"__id__":51}],"_components":[{"__type__":"cc.UITransformComponent","_name":"Canvas<UITransformComponent>","node":{"__id__":12},"_contentSize":{"__type__":"cc.Size","width":640,"height":960}},{"__type__":"cc.CanvasComponent","_name":"Canvas<CanvasComponent>","node":{"__id__":12},"_color":{"__type__":"cc.Color","a":160}},{"__type__":"a637fCK/qhG+Y//Ok7nZjw0","_name":"Canvas<UICtr>","node":{"__id__":12},"startUI":{"__id__":32},"overtUI":{"__id__":13},"btnNode":{"__id__":35},"levelText":{"__id__":45},"startBtn":{"__id__":40},"restartBtn":{"__id__":39},"voiceOpenNode":{"__id__":43},"voiceCloseNode":{"__id__":42},"coverNode":{"__id__":47},"rankRenderNode":{"__id__":46},"rankWrap":{"__id__":48},"resetBtn":{"__id__":51},"title_black":{"__uuid__":"11sAvf1LZPta6e1OIdzmBE@f9941"},"title_white":{"__uuid__":"d2OvJs0qhEWak+VLPhzFHV@f9941"},"mode_moon":{"__uuid__":"43cEEFGf1Jjpj0ACpr22+f@f9941"},"mode_sun":{"__uuid__":"852jvOEoNDEITSgh0TykXZ@f9941"},"mode_moon_icon":{"__uuid__":"b1WA5QS11N95yjlG3cqxjd@f9941"},"mode_sun_icon":{"__uuid__":"f5BjYv1QhJE7BAx5wF/o+K@f9941"}},{"__type__":"cc.AnimationComponent","_name":"Canvas<AnimationComponent>","node":{"__id__":12}}],"_lpos":{"__type__":"cc.Vec3","x":320,"y":480,"z":1},"_layer":33554432,"_id":"3adHBDKOBKp4B4XVhiL1L4"},{"__type__":"cc.Node","_name":"Over","_parent":{"__id__":12},"_children":[{"__id__":14},{"__id__":19}],"_active":false,"_components":[{"__type__":"cc.UITransformComponent","_name":"Over<UITransformComponent>","node":{"__id__":13},"_contentSize":{"__type__":"cc.Size","width":640,"height":960}},{"__type__":"cc.WidgetComponent","_name":"Over<WidgetComponent>","node":{"__id__":13},"_alignFlags":45,"_originalWidth":100,"_originalHeight":100},{"__type__":"cc.SpriteComponent","node":{"__id__":13},"_color":{"__type__":"cc.Color","r":251,"g":251,"b":246,"a":146},"_spriteFrame":{"__uuid__":"7dj5uJT9FMn6OrOOx83tfK@f9941"},"_sizeMode":0},{"__type__":"cc.AnimationComponent","_name":"Over<AnimationComponent>","node":{"__id__":13},"_clips":[{"__uuid__":"c0JLFGQgZHxpS5kh45W/Aj"},{"__uuid__":"0dtVoFcIJCaacKGf9WCTrG"}]}]},{"__type__":"cc.Node","_name":"top","_parent":{"__id__":13},"_children":[{"__id__":15}],"_components":[{"__type__":"cc.UITransformComponent","_name":"top<UITransformComponent>","node":{"__id__":14},"_contentSize":{"__type__":"cc.Size","width":158,"height":51}},{"__type__":"cc.WidgetComponent","_name":"top<WidgetComponent>","node":{"__id__":14},"_alignFlags":1,"_right":241,"_top":0.18,"_isAbsTop":false}],"_lpos":{"__type__":"cc.Vec3","y":281.70000000000005}},{"__type__":"cc.Node","_name":"best","_parent":{"__id__":14},"_children":[{"__id__":16}],"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":15},"_contentSize":{"__type__":"cc.Size","width":158,"height":51}},{"__type__":"cc.SpriteComponent","node":{"__id__":15},"_spriteFrame":{"__uuid__":"dc1wBZ2CtDnISyeHDW6c6z@f9941"},"_isTrimmedMode":false}],"_layer":33554432},{"__type__":"cc.Node","_name":"wrap","_parent":{"__id__":15},"_children":[{"__id__":17},{"__id__":18}],"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":16},"_contentSize":{"__type__":"cc.Size","width":88.6,"height":32}},{"__type__":"cc.LayoutComponent","node":{"__id__":16},"_resizeMode":1,"_N$layoutType":1}]},{"__type__":"cc.Node","_name":"huangguan","_parent":{"__id__":16},"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":17},"_contentSize":{"__type__":"cc.Size","width":43,"height":36}},{"__type__":"cc.SpriteComponent","node":{"__id__":17},"_spriteFrame":{"__uuid__":"d56g5pD5xNbbR1aYjizbW5@f9941"}}],"_lpos":{"__type__":"cc.Vec3","x":-22.799999999999997},"_lscale":{"__type__":"cc.Vec3","x":0.7,"y":0.7,"z":0.7},"_layer":33554432},{"__type__":"cc.Node","_name":"num","_parent":{"__id__":16},"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":18},"_contentSize":{"__type__":"cc.Size","width":45.6,"height":30}},{"__type__":"cc.LabelComponent","node":{"__id__":18},"_string":"111","_actualFontSize":30,"_fontSize":30,"_lineHeight":30}],"_lpos":{"__type__":"cc.Vec3","x":21.500000000000004,"y":-3.49},"_layer":33554432},{"__type__":"cc.Node","_name":"items","_parent":{"__id__":13},"_children":[{"__id__":20},{"__id__":24},{"__id__":28}],"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":19},"_contentSize":{"__type__":"cc.Size","width":600,"height":359}},{"__type__":"cc.LayoutComponent","node":{"__id__":19},"_resizeMode":1,"_N$layoutType":2,"_spacingY":40},{"__type__":"cc.WidgetComponent","node":{"__id__":19},"_alignFlags":1,"_top":0.34,"_isAbsTop":false},{"__type__":"cc.AnimationComponent","_name":"items<AnimationComponent>","node":{"__id__":19},"_clips":[{"__uuid__":"da4RYC9HtN+JzfbZ3mXml2"},{"__uuid__":"fa6zIIJ51EwJo756oKWr3+"}]}],"_lpos":{"__type__":"cc.Vec3","y":-25.900000000000034}},{"__type__":"cc.Node","_name":"mode","_parent":{"__id__":19},"_children":[{"__id__":21}],"_components":[{"__type__":"cc.UITransformComponent","_name":"item<UITransformComponent>","node":{"__id__":20},"_contentSize":{"__type__":"cc.Size","width":470,"height":93}}],"_lpos":{"__type__":"cc.Vec3","y":133}},{"__type__":"cc.Node","_name":"wrap","_parent":{"__id__":20},"_children":[{"__id__":22},{"__id__":23}],"_components":[{"__type__":"cc.UITransformComponent","_name":"wrap<UITransformComponent>","node":{"__id__":21},"_contentSize":{"__type__":"cc.Size","width":470,"height":93}},{"__type__":"cc.SpriteComponent","node":{"__id__":21},"_spriteFrame":{"__uuid__":"a3Ul5CT4tJ8p/OwaMgOAN9@f9941"}},{"__type__":"cc.ButtonComponent","node":{"__id__":21},"clickEvents":[{"__type__":"cc.ClickEvent","target":{"__id__":12},"_componentId":"a637fCK/qhG+Y//Ok7nZjw0","handler":"itemClick","customEventData":"1"}]},{"__type__":"cc.AnimationComponent","_name":"wrap<AnimationComponent>","node":{"__id__":21},"_clips":[{"__uuid__":"06RtfPnRtB2rWZXYcHMsoX"}],"_defaultClip":{"__uuid__":"06RtfPnRtB2rWZXYcHMsoX"}}],"_lpos":{"__type__":"cc.Vec3","y":-1000}},{"__type__":"cc.Node","_name":"icon","_parent":{"__id__":21},"_components":[{"__type__":"cc.UITransformComponent","_name":"icon<UITransformComponent>","node":{"__id__":22},"_contentSize":{"__type__":"cc.Size","width":56,"height":50}},{"__type__":"cc.SpriteComponent","_name":"icon<SpriteComponent>","node":{"__id__":22},"_spriteFrame":{"__uuid__":"b1WA5QS11N95yjlG3cqxjd@f9941"}}],"_lpos":{"__type__":"cc.Vec3","x":-172.545},"_layer":33554432},{"__type__":"cc.Node","_name":"text","_parent":{"__id__":21},"_components":[{"__type__":"cc.UITransformComponent","_name":"text<UITransformComponent>","node":{"__id__":23},"_contentSize":{"__type__":"cc.Size","width":120,"height":60}},{"__type__":"cc.LabelComponent","_name":"text<LabelComponent>","node":{"__id__":23},"_string":"激活黑暗模式","_actualFontSize":25,"_fontSize":25,"_lineHeight":30,"_overflow":3}],"_layer":33554432},{"__type__":"cc.Node","_name":"suo","_parent":{"__id__":19},"_children":[{"__id__":25}],"_components":[{"__type__":"cc.UITransformComponent","_name":"item<UITransformComponent>","node":{"__id__":24},"_contentSize":{"__type__":"cc.Size","width":470,"height":93}}]},{"__type__":"cc.Node","_name":"wrap","_parent":{"__id__":24},"_children":[{"__id__":26},{"__id__":27}],"_components":[{"__type__":"cc.UITransformComponent","_name":"wrap<UITransformComponent>","node":{"__id__":25},"_contentSize":{"__type__":"cc.Size","width":470,"height":93}},{"__type__":"cc.SpriteComponent","node":{"__id__":25},"_spriteFrame":{"__uuid__":"a3Ul5CT4tJ8p/OwaMgOAN9@f9941"}},{"__type__":"cc.ButtonComponent","node":{"__id__":25},"clickEvents":[{"__type__":"cc.ClickEvent","target":{"__id__":12},"_componentId":"a637fCK/qhG+Y//Ok7nZjw0","handler":"itemClick","customEventData":"2"}]},{"__type__":"cc.AnimationComponent","node":{"__id__":25},"_clips":[{"__uuid__":"06RtfPnRtB2rWZXYcHMsoX"}],"_defaultClip":{"__uuid__":"06RtfPnRtB2rWZXYcHMsoX"}}],"_lpos":{"__type__":"cc.Vec3","y":-850}},{"__type__":"cc.Node","_name":"icon","_parent":{"__id__":25},"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":26},"_contentSize":{"__type__":"cc.Size","width":36,"height":53}},{"__type__":"cc.SpriteComponent","node":{"__id__":26},"_spriteFrame":{"__uuid__":"44OVNW5m5GJ7O0VrBs2Emw@f9941"}}],"_lpos":{"__type__":"cc.Vec3","x":-172.545},"_layer":33554432},{"__type__":"cc.Node","_name":"text","_parent":{"__id__":25},"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":27},"_contentSize":{"__type__":"cc.Size","width":120,"height":60}},{"__type__":"cc.LabelComponent","node":{"__id__":27},"_string":"激活黑暗模式","_actualFontSize":25,"_fontSize":25,"_lineHeight":30,"_overflow":3}],"_layer":33554432},{"__type__":"cc.Node","_name":"gift","_parent":{"__id__":19},"_children":[{"__id__":29}],"_components":[{"__type__":"cc.UITransformComponent","_name":"item<UITransformComponent>","node":{"__id__":28},"_contentSize":{"__type__":"cc.Size","width":470,"height":93}}],"_lpos":{"__type__":"cc.Vec3","y":-133}},{"__type__":"cc.Node","_name":"wrap","_parent":{"__id__":28},"_children":[{"__id__":30},{"__id__":31}],"_components":[{"__type__":"cc.UITransformComponent","_name":"wrap<UITransformComponent>","node":{"__id__":29},"_contentSize":{"__type__":"cc.Size","width":470,"height":93}},{"__type__":"cc.SpriteComponent","node":{"__id__":29},"_spriteFrame":{"__uuid__":"a3Ul5CT4tJ8p/OwaMgOAN9@f9941"}},{"__type__":"cc.ButtonComponent","node":{"__id__":29},"clickEvents":[{"__type__":"cc.ClickEvent","target":{"__id__":12},"_componentId":"a637fCK/qhG+Y//Ok7nZjw0","handler":"itemClick","customEventData":"3"}]},{"__type__":"cc.AnimationComponent","node":{"__id__":29},"_clips":[{"__uuid__":"06RtfPnRtB2rWZXYcHMsoX"}],"_defaultClip":{"__uuid__":"06RtfPnRtB2rWZXYcHMsoX"}}],"_lpos":{"__type__":"cc.Vec3","y":-700}},{"__type__":"cc.Node","_name":"icon","_parent":{"__id__":29},"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":30},"_contentSize":{"__type__":"cc.Size","width":53,"height":55}},{"__type__":"cc.SpriteComponent","node":{"__id__":30},"_spriteFrame":{"__uuid__":"d0/2gy0GtILKMQw4xshLWG@f9941"}}],"_lpos":{"__type__":"cc.Vec3","x":-172.545},"_layer":33554432},{"__type__":"cc.Node","_name":"text","_parent":{"__id__":29},"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":31},"_contentSize":{"__type__":"cc.Size","width":120,"height":60}},{"__type__":"cc.LabelComponent","node":{"__id__":31},"_string":"激活黑暗模式","_actualFontSize":25,"_fontSize":25,"_lineHeight":30,"_overflow":3}],"_layer":33554432},{"__type__":"cc.Node","_name":"Start","_parent":{"__id__":12},"_children":[{"__id__":33}],"_components":[{"__type__":"cc.UITransformComponent","_name":"Start<UITransformComponent>","node":{"__id__":32},"_contentSize":{"__type__":"cc.Size","width":640,"height":960}},{"__type__":"cc.WidgetComponent","_name":"Start<WidgetComponent>","node":{"__id__":32},"_alignFlags":45,"_isAbsBottom":false,"_originalWidth":100,"_originalHeight":100}]},{"__type__":"cc.Node","_name":"Title","_parent":{"__id__":32},"_children":[{"__id__":34}],"_components":[{"__type__":"cc.UITransformComponent","_name":"Title<UITransformComponent>","node":{"__id__":33},"_contentSize":{"__type__":"cc.Size","width":295,"height":95}},{"__type__":"cc.WidgetComponent","_name":"Title<WidgetComponent>","node":{"__id__":33},"_alignFlags":17,"_top":0.17,"_bottom":0.5,"_isAbsTop":false,"_isAbsBottom":false},{"__type__":"cc.SpriteComponent","_name":"Title<SpriteComponent>","node":{"__id__":33},"_spriteFrame":{"__uuid__":"d2OvJs0qhEWak+VLPhzFHV@f9941"}},{"__type__":"cc.AnimationComponent","_name":"Title<AnimationComponent>","node":{"__id__":33},"_clips":[{"__uuid__":"90ze6WXsNBPadBgDFpBRzn"}],"_defaultClip":{"__uuid__":"90ze6WXsNBPadBgDFpBRzn"}}],"_lpos":{"__type__":"cc.Vec3","y":269.29999999999995},"_layer":33554432},{"__type__":"cc.Node","_name":"best","_parent":{"__id__":33},"_components":[{"__type__":"cc.UITransformComponent","_name":"best<UITransformComponent>","node":{"__id__":34},"_contentSize":{"__type__":"cc.Size","width":135.6,"height":30}},{"__type__":"cc.LabelComponent","_name":"best<LabelComponent>","node":{"__id__":34},"_color":{"__type__":"cc.Color","a":187},"_string":"关卡：111","_horizontalAlign":0,"_verticalAlign":0,"_actualFontSize":30,"_fontSize":30,"_lineHeight":30},{"__type__":"cc.WidgetComponent","_name":"best<WidgetComponent>","node":{"__id__":34},"_alignFlags":4,"_bottom":-45}],"_lpos":{"__type__":"cc.Vec3","y":-77.5},"_layer":33554432},{"__type__":"cc.Node","_name":"Btn","_parent":{"__id__":12},"_children":[{"__id__":36},{"__id__":37},{"__id__":38},{"__id__":41},{"__id__":44}],"_components":[{"__type__":"cc.UITransformComponent","_name":"btn<UITransformComponent>","node":{"__id__":35},"_contentSize":{"__type__":"cc.Size","width":600,"height":100}},{"__type__":"cc.LayoutComponent","_name":"btn<LayoutComponent>","node":{"__id__":35},"_N$layoutType":1,"_spacingX":27},{"__type__":"cc.WidgetComponent","_name":"btn<WidgetComponent>","node":{"__id__":35},"_alignFlags":20,"_bottom":0.1,"_isAbsBottom":false},{"__type__":"cc.AnimationComponent","_name":"Btn<AnimationComponent>","node":{"__id__":35},"playOnLoad":true,"_clips":[{"__uuid__":"6eeXLfUMFG1obqij1EzTl+"}],"_defaultClip":{"__uuid__":"6eeXLfUMFG1obqij1EzTl+"}}],"_lpos":{"__type__":"cc.Vec3","y":-334}},{"__type__":"cc.Node","_name":"rank","_parent":{"__id__":35},"_components":[{"__type__":"cc.UITransformComponent","_name":"rank<UITransformComponent>","node":{"__id__":36},"_contentSize":{"__type__":"cc.Size","width":90,"height":90}},{"__type__":"cc.SpriteComponent","_name":"rank<SpriteComponent>","node":{"__id__":36},"_spriteFrame":{"__uuid__":"97xmzMKy1Gh6rG7w1iMwsZ@f9941"},"_sizeMode":0},{"__type__":"cc.AnimationComponent","_name":"rank<AnimationComponent>","node":{"__id__":36},"_clips":[{"__uuid__":"2fB0F2Rm9I7qMGQ7gKlXOX"}],"_defaultClip":{"__uuid__":"2fB0F2Rm9I7qMGQ7gKlXOX"}},{"__type__":"cc.ButtonComponent","node":{"__id__":36},"clickEvents":[{"__type__":"cc.ClickEvent","target":{"__id__":12},"_componentId":"a637fCK/qhG+Y//Ok7nZjw0","handler":"btnClick","customEventData":"rank"}]}],"_lpos":{"__type__":"cc.Vec3","x":-255,"y":-300},"_layer":33554432},{"__type__":"cc.Node","_name":"share","_parent":{"__id__":35},"_components":[{"__type__":"cc.UITransformComponent","_name":"share<UITransformComponent>","node":{"__id__":37},"_contentSize":{"__type__":"cc.Size","width":90,"height":90}},{"__type__":"cc.SpriteComponent","_name":"share<SpriteComponent>","node":{"__id__":37},"_spriteFrame":{"__uuid__":"c29sCg8yxE84wLShO6K/KR@f9941"},"_sizeMode":0},{"__type__":"cc.AnimationComponent","_name":"share<AnimationComponent>","node":{"__id__":37},"_clips":[{"__uuid__":"2fB0F2Rm9I7qMGQ7gKlXOX"}],"_defaultClip":{"__uuid__":"2fB0F2Rm9I7qMGQ7gKlXOX"}},{"__type__":"cc.ButtonComponent","node":{"__id__":37},"clickEvents":[{"__type__":"cc.ClickEvent","target":{"__id__":12},"_componentId":"a637fCK/qhG+Y//Ok7nZjw0","handler":"btnClick","customEventData":"share"}]}],"_lpos":{"__type__":"cc.Vec3","x":-138,"y":-300},"_layer":33554432},{"__type__":"cc.Node","_name":"start","_parent":{"__id__":35},"_children":[{"__id__":39},{"__id__":40}],"_components":[{"__type__":"cc.UITransformComponent","_name":"start<UITransformComponent>","node":{"__id__":38},"_contentSize":{"__type__":"cc.Size","width":130,"height":130}}],"_lpos":{"__type__":"cc.Vec3","x":-1,"y":-300},"_layer":33554432},{"__type__":"cc.Node","_name":"restart","_parent":{"__id__":38},"_active":false,"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":39},"_contentSize":{"__type__":"cc.Size","width":130,"height":130}},{"__type__":"cc.SpriteComponent","node":{"__id__":39},"_spriteFrame":{"__uuid__":"06NFFz2nlEv6NTYfjv0sJK@f9941"},"_sizeMode":0},{"__type__":"cc.ButtonComponent","node":{"__id__":39},"clickEvents":[{"__type__":"cc.ClickEvent","target":{"__id__":2},"_componentId":"34d13NYnH5F262CGRQw5jxI","handler":"reStart"}]}],"_layer":33554432},{"__type__":"cc.Node","_name":"start","_parent":{"__id__":38},"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":40},"_contentSize":{"__type__":"cc.Size","width":130,"height":130}},{"__type__":"cc.SpriteComponent","node":{"__id__":40},"_spriteFrame":{"__uuid__":"behzIroFVPxaYG4FqUl1lx@f9941"},"_sizeMode":0},{"__type__":"cc.ButtonComponent","node":{"__id__":40},"clickEvents":[{"__type__":"cc.ClickEvent","target":{"__id__":2},"_componentId":"34d13NYnH5F262CGRQw5jxI","handler":"startGame"}]}],"_layer":33554432},{"__type__":"cc.Node","_name":"voice","_parent":{"__id__":35},"_children":[{"__id__":42},{"__id__":43}],"_components":[{"__type__":"cc.UITransformComponent","_name":"voice<UITransformComponent>","node":{"__id__":41},"_contentSize":{"__type__":"cc.Size","width":90,"height":90}},{"__type__":"cc.AnimationComponent","node":{"__id__":41},"_clips":[{"__uuid__":"2fB0F2Rm9I7qMGQ7gKlXOX"}],"_defaultClip":{"__uuid__":"2fB0F2Rm9I7qMGQ7gKlXOX"}},{"__type__":"cc.ButtonComponent","node":{"__id__":41},"clickEvents":[{"__type__":"cc.ClickEvent","target":{"__id__":12},"_componentId":"a637fCK/qhG+Y//Ok7nZjw0","handler":"btnClick","customEventData":"voice"}]}],"_lpos":{"__type__":"cc.Vec3","x":136,"y":-300},"_layer":33554432},{"__type__":"cc.Node","_name":"close","_parent":{"__id__":41},"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":42},"_contentSize":{"__type__":"cc.Size","width":90,"height":90}},{"__type__":"cc.SpriteComponent","node":{"__id__":42},"_spriteFrame":{"__uuid__":"ceOCaq2fJCSpUwnJkYaJQm@f9941"},"_sizeMode":0}],"_layer":33554432},{"__type__":"cc.Node","_name":"open","_parent":{"__id__":41},"_active":false,"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":43},"_contentSize":{"__type__":"cc.Size","width":90,"height":90}},{"__type__":"cc.SpriteComponent","node":{"__id__":43},"_spriteFrame":{"__uuid__":"4fZBSApLFJaJl32KmZLEFC@f9941"},"_sizeMode":0}],"_layer":33554432},{"__type__":"cc.Node","_name":"mode","_parent":{"__id__":35},"_components":[{"__type__":"cc.UITransformComponent","_name":"mode<UITransformComponent>","node":{"__id__":44},"_contentSize":{"__type__":"cc.Size","width":90,"height":90}},{"__type__":"cc.SpriteComponent","_name":"mode<SpriteComponent>","node":{"__id__":44},"_spriteFrame":{"__uuid__":"43cEEFGf1Jjpj0ACpr22+f@f9941"},"_sizeMode":0},{"__type__":"cc.AnimationComponent","node":{"__id__":44},"_clips":[{"__uuid__":"2fB0F2Rm9I7qMGQ7gKlXOX"}],"_defaultClip":{"__uuid__":"2fB0F2Rm9I7qMGQ7gKlXOX"}},{"__type__":"cc.ButtonComponent","node":{"__id__":44},"clickEvents":[{"__type__":"cc.ClickEvent","target":{"__id__":12},"_componentId":"a637fCK/qhG+Y//Ok7nZjw0","handler":"btnClick","customEventData":"mode"}]}],"_lpos":{"__type__":"cc.Vec3","x":253,"y":-300},"_layer":33554432},{"__type__":"cc.Node","_name":"Level","_parent":{"__id__":12},"_active":false,"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":45},"_contentSize":{"__type__":"cc.Size","width":88.98,"height":80}},{"__type__":"cc.LabelComponent","node":{"__id__":45},"_color":{"__type__":"cc.Color"},"_string":"10","_actualFontSize":80,"_fontSize":80,"_lineHeight":80},{"__type__":"cc.WidgetComponent","node":{"__id__":45},"_alignFlags":1,"_top":0.1,"_isAbsTop":false}],"_lpos":{"__type__":"cc.Vec3","x":-4.17,"y":344},"_layer":33554432},{"__type__":"cc.Node","_name":"rank","_parent":{"__id__":12},"_children":[{"__id__":47},{"__id__":48}],"_active":false,"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":46},"_contentSize":{"__type__":"cc.Size","width":640,"height":960}},{"__type__":"cc.WidgetComponent","node":{"__id__":46},"_alignFlags":45,"_originalWidth":100,"_originalHeight":100},{"__type__":"cc.AnimationComponent","_name":"rank<AnimationComponent>","node":{"__id__":46},"_clips":[{"__uuid__":"7578tE8PtOYrIv09lEUyfG"}],"_defaultClip":{"__uuid__":"7578tE8PtOYrIv09lEUyfG"}}]},{"__type__":"cc.Node","_name":"cover","_parent":{"__id__":46},"_components":[{"__type__":"cc.UITransformComponent","_name":"cover<UITransformComponent>","node":{"__id__":47},"_contentSize":{"__type__":"cc.Size","width":640,"height":960}},{"__type__":"cc.SpriteComponent","_name":"cover<SpriteComponent>","node":{"__id__":47},"_color":{"__type__":"cc.Color","r":255,"g":255,"b":255,"a":166},"_spriteFrame":{"__uuid__":"74UHozC9VI4Ito/WyRcRuC@f9941"}},{"__type__":"cc.WidgetComponent","node":{"__id__":47},"_alignFlags":45,"_originalWidth":640,"_originalHeight":960}]},{"__type__":"cc.Node","_name":"wrap","_parent":{"__id__":46},"_children":[{"__id__":49},{"__id__":50}],"_components":[{"__type__":"cc.UITransformComponent","_name":"rank<UITransformComponent>","node":{"__id__":48},"_contentSize":{"__type__":"cc.Size","width":540,"height":740}},{"__type__":"cc.SpriteComponent","_name":"rank<SpriteComponent>","node":{"__id__":48},"_spriteFrame":{"__uuid__":"e9JutowSJAY7jMVC+41pl1@f9941"},"_sizeMode":0}],"_layer":33554432},{"__type__":"cc.Node","_name":"render","_parent":{"__id__":48},"_components":[{"__type__":"cc.UITransformComponent","_name":"render<UITransformComponent>","node":{"__id__":49},"_contentSize":{"__type__":"cc.Size","width":500,"height":580}},{"__type__":"cc.SubContextView","_name":"render<SubContextView>","node":{"__id__":49}}],"_lpos":{"__type__":"cc.Vec3","y":-50},"_layer":33554432},{"__type__":"cc.Node","_name":"title","_parent":{"__id__":48},"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":50},"_contentSize":{"__type__":"cc.Size","width":252,"height":71}},{"__type__":"cc.SpriteComponent","node":{"__id__":50},"_spriteFrame":{"__uuid__":"f4d8rZooVLirpMjEn5noED@f9941"}},{"__type__":"cc.WidgetComponent","node":{"__id__":50},"_alignFlags":1,"_top":30}],"_lpos":{"__type__":"cc.Vec3","y":304.5},"_layer":33554432},{"__type__":"cc.Node","_name":"reset","_parent":{"__id__":12},"_children":[{"__id__":52}],"_active":false,"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":51},"_contentSize":{"__type__":"cc.Size","width":70,"height":70}},{"__type__":"cc.WidgetComponent","node":{"__id__":51},"_alignFlags":12,"_left":35,"_bottom":35},{"__type__":"cc.ButtonComponent","node":{"__id__":51},"clickEvents":[{"__type__":"cc.ClickEvent","target":{"__id__":12},"_componentId":"a637fCK/qhG+Y//Ok7nZjw0","handler":"resetBtnClick"}]},{"__type__":"cc.AnimationComponent","_name":"reset<AnimationComponent>","node":{"__id__":51},"_clips":[{"__uuid__":"c5nNMF3iRHPqRpCUgA20XU"},{"__uuid__":"2fB0F2Rm9I7qMGQ7gKlXOX"}],"_defaultClip":{"__uuid__":"c5nNMF3iRHPqRpCUgA20XU"}}],"_lpos":{"__type__":"cc.Vec3","x":-250,"y":-410},"_layer":33554432},{"__type__":"cc.Node","_name":"reset","_parent":{"__id__":51},"_components":[{"__type__":"cc.UITransformComponent","node":{"__id__":52},"_contentSize":{"__type__":"cc.Size","width":70,"height":70}},{"__type__":"cc.SpriteComponent","node":{"__id__":52},"_spriteFrame":{"__uuid__":"06NFFz2nlEv6NTYfjv0sJK@f9941"},"_sizeMode":0}],"_lpos":{"__type__":"cc.Vec3","y":-120}},{"__type__":"cc.CameraComponent","_name":"Camera<CameraComponent>","node":{"__id__":54},"_color":{"__type__":"cc.Color","r":70,"g":214,"b":145},"_visibility":1822425087},{"__type__":"cc.Node","_name":"Camera","_parent":{"__id__":1},"_components":[{"__id__":53},{"__type__":"cc.AnimationComponent","_name":"Camera<AnimationComponent>","node":{"__id__":54},"_clips":[{"__uuid__":"deZ0I7S6JME7h0FNM6dH7d"}],"_defaultClip":{"__uuid__":"deZ0I7S6JME7h0FNM6dH7d"}}],"_lpos":{"__type__":"cc.Vec3","y":11.5,"z":20},"_lrot":{"__type__":"cc.Quat","x":-0.25881904510252074,"w":0.9659258262890683},"_euler":{"__type__":"cc.Vec3","x":-30},"_id":"c9DMICJLFO5IeO07EPon7U"},{"__type__":"cc.Node","_name":"Main Light","_parent":{"__id__":1},"_components":[{"__type__":"cc.DirectionalLightComponent","_name":"Main Light<DirectionalLightComponent>","node":{"__id__":55},"_colorTemperature":7942,"_illuminance":65001}],"_lpos":{"__type__":"cc.Vec3","y":1.162,"z":2.119},"_lrot":{"__type__":"cc.Quat","x":-0.6427876096865393,"w":0.766044443118978},"_euler":{"__type__":"cc.Vec3","x":-80},"_id":"c0y6F5f+pAvI805TdmxIjx"},{"__type__":"cc.Node","_name":"Particles","_parent":{"__id__":1},"_children":[{"__id__":57}],"_components":[{"__type__":"26e14l26PlNDK8MWAXUGuw4","node":{"__id__":56},"over":[{"__id__":59},{"__id__":63}]}],"_id":"a7QT0QsClMdKpxc7KjDbMq"},{"__type__":"cc.Node","_name":"Over","_parent":{"__id__":56},"_children":[{"__id__":58},{"__id__":62}]},{"__type__":"cc.Node","_name":"New Particle","_parent":{"__id__":57},"_components":[{"__id__":59}],"_lpos":{"__type__":"cc.Vec3","x":-5.763,"y":-0.228},"_lrot":{"__type__":"cc.Quat","x":-0.18301270189221927,"y":-0.6830127018922193,"z":0.6830127018922194,"w":0.18301270189221935},"_euler":{"__type__":"cc.Vec3","x":90.00000000000001,"y":-180,"z":30.000000000000004}},{"__type__":"cc.ParticleSystemComponent","_name":"New Particle<ParticleSystemComponent>","node":{"__id__":58},"_enabled":false,"_materials":[{"__uuid__":"6cDFl/RtJO/oG7j00QiuBo"},null],"startColor":{"__type__":"cc.GradientRange","gradient":{"__type__":"cc.Gradient"},"gradientMin":{"__type__":"cc.Gradient"},"gradientMax":{"__type__":"cc.Gradient"}},"startSizeX":{"__id__":60},"startSize":{"__id__":60},"startSizeY":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"startSizeZ":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"startSpeed":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constantMin":1.5,"constantMax":2.5},"startRotationX":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"startRotationY":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"startRotationZ":{"__id__":61},"startRotation":{"__id__":61},"startDelay":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"startLifetime":{"__type__":"cc.CurveRange","mode":3,"curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constant":5,"constantMin":3,"constantMax":4},"duration":0.3,"loop":false,"gravityModifier":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"rateOverTime":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constant":150},"rateOverDistance":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"colorOverLifetimeModule":{"__type__":"cc.ColorOvertimeModule","enable":true,"color":{"__type__":"cc.GradientRange","colorMin":{"__type__":"cc.Color","r":137,"g":253,"b":188},"colorMax":{"__type__":"cc.Color","r":255,"g":2,"b":133},"gradient":{"__type__":"cc.Gradient","colorKeys":[{"__type__":"cc.ColorKey","color":{"__type__":"cc.Color","r":248,"g":38,"b":38}},{"__type__":"cc.ColorKey","color":{"__type__":"cc.Color","r":240,"g":70,"b":70},"time":0.5290178571428571}],"alphaKeys":[{"__type__":"cc.AlphaKey","alpha":255,"time":0.3794642857142857}]},"gradientMin":{"__type__":"cc.Gradient","colorKeys":[{"__type__":"cc.ColorKey","color":{"__type__":"cc.Color","r":247,"g":7,"b":83},"time":0.006696428571428571},{"__type__":"cc.ColorKey","color":{"__type__":"cc.Color","r":97,"g":247,"b":49},"time":0.5959821428571429}],"alphaKeys":[{"__type__":"cc.AlphaKey","alpha":255},{"__type__":"cc.AlphaKey","alpha":255,"time":0.6830357142857143}]},"gradientMax":{"__type__":"cc.Gradient","colorKeys":[{"__type__":"cc.ColorKey","color":{"__type__":"cc.Color","r":255,"g":204}},{"__type__":"cc.ColorKey","color":{"__type__":"cc.Color","r":20,"g":209,"b":35},"time":0.5558035714285714}],"alphaKeys":[{"__type__":"cc.AlphaKey","alpha":255,"time":0.006696428571428571},{"__type__":"cc.AlphaKey","alpha":156,"time":0.6205357142857143}]},"_mode":2}},"shapeModule":{"__type__":"cc.ShapeModule","_shapeType":4,"shapeType":4,"arcSpeed":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constant":1}},"sizeOvertimeModule":{"__type__":"cc.SizeOvertimeModule","size":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"x":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"y":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"z":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}}},"velocityOvertimeModule":{"__type__":"cc.VelocityOvertimeModule","enable":true,"x":{"__type__":"cc.CurveRange","mode":2,"curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":0.1},{"__type__":"cc.Keyframe","time":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":-1},{"__type__":"cc.Keyframe","time":0.1},{"__type__":"cc.Keyframe","time":1}]},"constant":10,"constantMin":-10,"constantMax":10,"multiplier":20},"y":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"z":{"__type__":"cc.CurveRange","mode":2,"curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":0.18,"value":-0.1},{"__type__":"cc.Keyframe","time":1,"value":-0.07}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1.01},{"__type__":"cc.Keyframe","time":0.17},{"__type__":"cc.Keyframe","time":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":0.06},{"__type__":"cc.Keyframe","time":1}]},"constant":-10,"multiplier":-30},"speedModifier":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constant":1}},"forceOvertimeModule":{"__type__":"cc.ForceOvertimeModule","enable":true,"x":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"y":{"__type__":"cc.CurveRange","mode":1,"curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","outTangent":-0.04},{"__type__":"cc.Keyframe","time":0.08,"inTangent":-0.04,"outTangent":-0.04},{"__type__":"cc.Keyframe","time":0.18,"value":-0.27,"inTangent":0.01,"outTangent":0.01},{"__type__":"cc.Keyframe","time":1,"value":-0.27}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"multiplier":10},"z":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe"},{"__type__":"cc.Keyframe","time":0.08,"value":0.01,"inTangent":-0.65,"outTangent":-0.65},{"__type__":"cc.Keyframe","time":0.12,"value":-0.11,"inTangent":-0.03,"outTangent":-0.03},{"__type__":"cc.Keyframe","time":1,"value":-0.1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"multiplier":-30},"space":0},"limitVelocityOvertimeModule":{"__type__":"cc.LimitVelocityOvertimeModule","limitX":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"limitY":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"limitZ":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"limit":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}}},"rotationOvertimeModule":{"__type__":"cc.RotationOvertimeModule","x":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constantMax":50},"y":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"z":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}}},"textureAnimationModule":{"__type__":"cc.TextureAnimationModule","frameOverTime":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"startFrame":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}}},"trailModule":{"__type__":"cc.TrailModule","lifeTime":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constant":1},"widthRatio":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"colorOverTrail":{"__type__":"cc.GradientRange","gradient":{"__type__":"cc.Gradient"},"gradientMin":{"__type__":"cc.Gradient"},"gradientMax":{"__type__":"cc.Gradient"}},"colorOvertime":{"__type__":"cc.GradientRange","gradient":{"__type__":"cc.Gradient"},"gradientMin":{"__type__":"cc.Gradient"},"gradientMax":{"__type__":"cc.Gradient"}},"_particleSystem":{"__id__":59}},"renderer":{"__type__":"cc.ParticleSystemRenderer","_renderMode":3,"_velocityScale":0,"_particleSystem":{"__id__":59}},"_capacity":200},{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constant":1},{"__type__":"cc.CurveRange","mode":3,"curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constantMax":180},{"__type__":"cc.Node","_name":"New Particle","_parent":{"__id__":57},"_components":[{"__id__":63}],"_lpos":{"__type__":"cc.Vec3","x":5.763,"y":-0.228},"_lrot":{"__type__":"cc.Quat","x":0.18301270189221935,"y":-0.6830127018922192,"z":0.6830127018922194,"w":-0.18301270189221935},"_euler":{"__type__":"cc.Vec3","x":90.00000000000003,"y":-180,"z":-30.000000000000004}},{"__type__":"cc.ParticleSystemComponent","_name":"New Particle<ParticleSystemComponent>","node":{"__id__":62},"_enabled":false,"_materials":[{"__uuid__":"6cDFl/RtJO/oG7j00QiuBo"},null],"startColor":{"__type__":"cc.GradientRange","gradient":{"__type__":"cc.Gradient"},"gradientMin":{"__type__":"cc.Gradient"},"gradientMax":{"__type__":"cc.Gradient"}},"startSizeX":{"__id__":64},"startSize":{"__id__":64},"startSizeY":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"startSizeZ":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"startSpeed":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constantMin":1.5,"constantMax":2.5},"startRotationX":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"startRotationY":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"startRotationZ":{"__id__":65},"startRotation":{"__id__":65},"startDelay":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"startLifetime":{"__type__":"cc.CurveRange","mode":3,"curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constant":5,"constantMin":3,"constantMax":4},"duration":0.3,"loop":false,"gravityModifier":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"rateOverTime":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constant":150},"rateOverDistance":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"colorOverLifetimeModule":{"__type__":"cc.ColorOvertimeModule","enable":true,"color":{"__type__":"cc.GradientRange","colorMin":{"__type__":"cc.Color","r":137,"g":253,"b":188},"colorMax":{"__type__":"cc.Color","r":255,"g":2,"b":133},"gradient":{"__type__":"cc.Gradient","colorKeys":[{"__type__":"cc.ColorKey","color":{"__type__":"cc.Color","r":248,"g":38,"b":38}},{"__type__":"cc.ColorKey","color":{"__type__":"cc.Color","r":240,"g":70,"b":70},"time":0.5290178571428571}],"alphaKeys":[{"__type__":"cc.AlphaKey","alpha":255,"time":0.3794642857142857}]},"gradientMin":{"__type__":"cc.Gradient","colorKeys":[{"__type__":"cc.ColorKey","color":{"__type__":"cc.Color","r":247,"g":7,"b":83},"time":0.006696428571428571},{"__type__":"cc.ColorKey","color":{"__type__":"cc.Color","r":97,"g":247,"b":49},"time":0.5959821428571429}],"alphaKeys":[{"__type__":"cc.AlphaKey","alpha":255},{"__type__":"cc.AlphaKey","alpha":255,"time":0.6830357142857143}]},"gradientMax":{"__type__":"cc.Gradient","colorKeys":[{"__type__":"cc.ColorKey","color":{"__type__":"cc.Color","r":255,"g":204}},{"__type__":"cc.ColorKey","color":{"__type__":"cc.Color","r":20,"g":209,"b":35},"time":0.5558035714285714}],"alphaKeys":[{"__type__":"cc.AlphaKey","alpha":255,"time":0.006696428571428571},{"__type__":"cc.AlphaKey","alpha":156,"time":0.6205357142857143}]},"_mode":2}},"shapeModule":{"__type__":"cc.ShapeModule","_shapeType":4,"shapeType":4,"arcSpeed":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constant":1}},"sizeOvertimeModule":{"__type__":"cc.SizeOvertimeModule","size":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"x":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"y":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"z":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}}},"velocityOvertimeModule":{"__type__":"cc.VelocityOvertimeModule","enable":true,"x":{"__type__":"cc.CurveRange","mode":2,"curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":0.1},{"__type__":"cc.Keyframe","time":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":-1},{"__type__":"cc.Keyframe","time":0.1},{"__type__":"cc.Keyframe","time":1}]},"constant":10,"constantMin":-10,"constantMax":10,"multiplier":20},"y":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"z":{"__type__":"cc.CurveRange","mode":2,"curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":0.18,"value":-0.1},{"__type__":"cc.Keyframe","time":1,"value":-0.07}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1.01},{"__type__":"cc.Keyframe","time":0.17},{"__type__":"cc.Keyframe","time":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":0.06},{"__type__":"cc.Keyframe","time":1}]},"constant":-10,"multiplier":-30},"speedModifier":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constant":1}},"forceOvertimeModule":{"__type__":"cc.ForceOvertimeModule","enable":true,"x":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"y":{"__type__":"cc.CurveRange","mode":1,"curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","outTangent":-0.04},{"__type__":"cc.Keyframe","time":0.08,"inTangent":-0.04,"outTangent":-0.04},{"__type__":"cc.Keyframe","time":0.18,"value":-0.27,"inTangent":0.01,"outTangent":0.01},{"__type__":"cc.Keyframe","time":1,"value":-0.27}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"multiplier":10},"z":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe"},{"__type__":"cc.Keyframe","time":0.08,"value":0.01,"inTangent":-0.65,"outTangent":-0.65},{"__type__":"cc.Keyframe","time":0.12,"value":-0.11,"inTangent":-0.03,"outTangent":-0.03},{"__type__":"cc.Keyframe","time":1,"value":-0.1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"multiplier":-30},"space":0},"limitVelocityOvertimeModule":{"__type__":"cc.LimitVelocityOvertimeModule","limitX":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"limitY":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"limitZ":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"limit":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}}},"rotationOvertimeModule":{"__type__":"cc.RotationOvertimeModule","x":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constantMax":50},"y":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"z":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}}},"textureAnimationModule":{"__type__":"cc.TextureAnimationModule","frameOverTime":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"startFrame":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}}},"trailModule":{"__type__":"cc.TrailModule","lifeTime":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constant":1},"widthRatio":{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]}},"colorOverTrail":{"__type__":"cc.GradientRange","gradient":{"__type__":"cc.Gradient"},"gradientMin":{"__type__":"cc.Gradient"},"gradientMax":{"__type__":"cc.Gradient"}},"colorOvertime":{"__type__":"cc.GradientRange","gradient":{"__type__":"cc.Gradient"},"gradientMin":{"__type__":"cc.Gradient"},"gradientMax":{"__type__":"cc.Gradient"}},"_particleSystem":{"__id__":63}},"renderer":{"__type__":"cc.ParticleSystemRenderer","_renderMode":3,"_velocityScale":0,"_particleSystem":{"__id__":63}},"_capacity":200},{"__type__":"cc.CurveRange","curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constant":1},{"__type__":"cc.CurveRange","mode":3,"curve":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMin":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"curveMax":{"__type__":"cc.AnimationCurve","preWrapMode":2,"postWrapMode":2,"keyFrames":[{"__type__":"cc.Keyframe","value":1},{"__type__":"cc.Keyframe","time":1,"value":1}]},"constantMax":180},{"__type__":"cc.Node","_name":"MusicCtr","_parent":{"__id__":1},"_components":[{"__type__":"6b312inzlZClKCPawU6SJP6","node":{"__id__":66},"music":[{"__uuid__":"ecEJ8a0QNH9ZWqCz8iJRB4"},{"__uuid__":"60gBqSuwNCQpvV87b4xy/i"},{"__uuid__":"62Ci3H0KFHZY23wQAEjq3e"}]}],"_id":"abo1jXFR5HUo27O7l3JPVW"}],{"__type__":"cc.AnimationClip","_name":"btnClick","_duration":0.3333333333333333,"_keys":[[0,0.16666666666666666,0.3333333333333333],[0,0.16666666666666666,0.3333333333333333]],"curveDatas":{},"_curves":[{"modifiers":["scale"],"data":{"keys":0,"values":[{"__type__":"cc.Vec3","x":1,"y":1,"z":1},{"__type__":"cc.Vec3","x":0.85,"y":0.85,"z":1},{"__type__":"cc.Vec3","x":1,"y":1,"z":1}],"easingMethods":[null,null,null]}},{"modifiers":[{"__type__":"cc.ComponentModifier","component":"cc.SpriteComponent"},"color"],"data":{"keys":1,"values":[{"__type__":"cc.Color","r":255,"g":255,"b":255},{"__type__":"cc.Color","r":255,"g":255,"b":255,"a":156},{"__type__":"cc.Color","r":255,"g":255,"b":255}],"easingMethods":[null,null,null]}}]},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"43cEEFGf1Jjpj0ACpr22+f","name":"yueliang","rect":{"x":1,"y":2,"width":103,"height":105},"offset":{"x":-1,"y":-1},"originalSize":{"width":107,"height":107},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"44OVNW5m5GJ7O0VrBs2Emw","name":"suo","rect":{"x":12,"y":5,"width":36,"height":53},"offset":{"x":-0.5,"y":-1},"originalSize":{"width":61,"height":61},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"4fZBSApLFJaJl32KmZLEFC","name":"voice_open","rect":{"x":2,"y":3,"width":102,"height":104},"offset":{"x":-0.5,"y":-1.5},"originalSize":{"width":107,"height":107},"rotated":false,"capInsets":[0,0,0,0]}},[{"__type__":"cc.Prefab","data":{"__id__":1}},{"__type__":"cc.Node","_name":"Target","_children":[{"__id__":2}],"_components":[{"__type__":"cc.AnimationComponent","_name":"Target<AnimationComponent>","node":{"__id__":1},"_clips":[{"__uuid__":"deZ0I7S6JME7h0FNM6dH7d"}],"_defaultClip":{"__uuid__":"deZ0I7S6JME7h0FNM6dH7d"}},{"__type__":"51090x6WYNNipQMIjxIjiEh","node":{"__id__":1}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__id__":0},"fileId":"c6T3D/DolEo5YNPtDbJtA2","_synced":{"default":false,"serializable":false}}},{"__type__":"cc.Node","_name":"New Cube","_parent":{"__id__":1},"_components":[{"__type__":"cc.ModelComponent","_name":"Cube<ModelComponent>","node":{"__id__":2},"_materials":[{"__uuid__":"adL6vOCIVKmaVPUyH1lItf"}],"_mesh":{"__uuid__":"12Y9dMgWdJKJGmTiZyQR9H@a804a"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__id__":0},"fileId":"dbnow03NVBU5uTH5WepXYz","_synced":{"default":false,"serializable":false}}}],{"__type__":"cc.AudioClip","_name":"move","_native":".mp3","_duration":0.261224,"_loadMode":0},{"__type__":"cc.AudioClip","_name":"start","_native":".mp3","_duration":1.724082,"_loadMode":0},{"__type__":"cc.AnimationClip","_name":"overShake","wrapMode":2,"_duration":0.3333333333333333,"_keys":[[0,0.08333333333333333,0.16666666666666666,0.25,0.3333333333333333]],"curveDatas":{},"_curves":[{"modifiers":[{"__type__":"cc.HierachyModifier","path":"Target/Cube"},"position"],"data":{"keys":0,"values":[{"__type__":"cc.Vec3"},{"__type__":"cc.Vec3","y":-0.05},{"__type__":"cc.Vec3"},{"__type__":"cc.Vec3","y":0.05},{"__type__":"cc.Vec3"}],"easingMethods":[null,null,null,null,null]}}]},{"__type__":"cc.Material","_effectAsset":{"__uuid__":"d1NGQ2rJZCcbhjH0/erZWw"},"_techIdx":"1","_defines":[{}],"_states":[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],"_props":[{"mainTexture":{"__uuid__":"3beukPMuBI1YVUucGdNhv4@6c48a"}}]},{"__type__":"cc.AnimationClip","_name":"btn","speed":0.9,"_duration":1,"_keys":[[0,0.5,0.6666666666666666],[0.08333333333333333,0.5833333333333334,0.75],[0.16666666666666666,0.6666666666666666,0.8333333333333334],[0.25,0.75,0.9166666666666666],[0.3333333333333333,0.8333333333333334,1]],"curveDatas":{},"_curves":[{"modifiers":[{"__type__":"cc.HierachyModifier","path":"rank"},"position"],"data":{"keys":0,"values":[{"__type__":"cc.Vec3","x":-255,"y":-300},{"__type__":"cc.Vec3","x":-255,"y":60},{"__type__":"cc.Vec3","x":-255}],"easingMethods":["quartOut",null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"share"},"position"],"data":{"keys":1,"values":[{"__type__":"cc.Vec3","x":-138,"y":-300},{"__type__":"cc.Vec3","x":-138,"y":60},{"__type__":"cc.Vec3","x":-138}],"easingMethods":["quartOut",null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"start"},"position"],"data":{"keys":2,"values":[{"__type__":"cc.Vec3","x":-1,"y":-300},{"__type__":"cc.Vec3","x":-1,"y":100},{"__type__":"cc.Vec3","x":-1}],"easingMethods":["quartOut",null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"voice"},"position"],"data":{"keys":3,"values":[{"__type__":"cc.Vec3","x":136,"y":-300},{"__type__":"cc.Vec3","x":136,"y":60},{"__type__":"cc.Vec3","x":136}],"easingMethods":["quartOut",null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"mode"},"position"],"data":{"keys":4,"values":[{"__type__":"cc.Vec3","x":253,"y":-300},{"__type__":"cc.Vec3","x":253,"y":60},{"__type__":"cc.Vec3","x":253}],"easingMethods":["quartOut",null,null]}}]},{"__type__":"cc.TextureCube","content":{"base":"2,2,0,0,0,0,8,0","mipmaps":[{"front":"19nm/mTHREDJpK3oh3GlTq","back":"19nm/mTHREDJpK3oh3GlTq","left":"19nm/mTHREDJpK3oh3GlTq","right":"19nm/mTHREDJpK3oh3GlTq","top":"19nm/mTHREDJpK3oh3GlTq","bottom":"19nm/mTHREDJpK3oh3GlTq"}]}},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"74UHozC9VI4Ito/WyRcRuC","name":"cover_bg","rect":{"x":0,"y":0,"width":640,"height":960},"offset":{"x":0,"y":0},"originalSize":{"width":640,"height":960},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.AnimationClip","_name":"rank","speed":0.5,"_duration":0.16666666666666666,"_keys":[[0,0.16666666666666666],[0,0.16666666666666666]],"curveDatas":{},"_curves":[{"modifiers":[{"__type__":"cc.HierachyModifier","path":"cover"},{"__type__":"cc.ComponentModifier","component":"cc.SpriteComponent"},"color"],"data":{"keys":0,"values":[{"__type__":"cc.Color","r":255,"g":255,"b":255,"a":0},{"__type__":"cc.Color","r":255,"g":255,"b":255,"a":166}],"easingMethods":[null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"wrap"},{"__type__":"cc.ComponentModifier","component":"cc.SpriteComponent"},"color"],"data":{"keys":1,"values":[{"__type__":"cc.Color","r":255,"g":255,"b":255,"a":98},{"__type__":"cc.Color","r":255,"g":255,"b":255}],"easingMethods":[null,null]}}]},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"7dj5uJT9FMn6OrOOx83tfK","name":"default_sprite_splash","rect":{"x":0,"y":0,"width":2,"height":2},"offset":{"x":0,"y":0},"originalSize":{"width":2,"height":2},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"852jvOEoNDEITSgh0TykXZ","name":"taiyang","rect":{"x":1,"y":2,"width":103,"height":105},"offset":{"x":-1,"y":-1},"originalSize":{"width":107,"height":107},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.AnimationClip","_name":"title","_keys":[[]],"curveDatas":{},"_curves":[{"modifiers":["position"],"data":{"keys":0,"values":[],"easingMethods":[]}}]},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"97xmzMKy1Gh6rG7w1iMwsZ","name":"rank","rect":{"x":2,"y":4,"width":101,"height":103},"offset":{"x":-1,"y":-2},"originalSize":{"width":107,"height":107},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"a3Ul5CT4tJ8p/OwaMgOAN9","name":"changfangxing","rect":{"x":3,"y":2,"width":470,"height":93},"offset":{"x":0,"y":-1},"originalSize":{"width":476,"height":95},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.Material","_effectAsset":{"__uuid__":"1brw/JvvpFnIvdrxpFCgMZ"},"_techIdx":"0","_defines":[{}],"_states":[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],"_props":[{"albedo":{"__type__":"cc.Color","r":248,"g":13,"b":61}}]},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"b1WA5QS11N95yjlG3cqxjd","name":"yejian","rect":{"x":3,"y":7,"width":56,"height":50},"offset":{"x":0.5,"y":-1.5},"originalSize":{"width":61,"height":61},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"behzIroFVPxaYG4FqUl1lx","name":"start","rect":{"x":3,"y":3,"width":127,"height":131},"offset":{"x":-0.5,"y":-1.5},"originalSize":{"width":134,"height":134},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.AnimationClip","_name":"showOver","speed":0.3,"_duration":0.35,"_keys":[[0.1,0.26666666666666666,0.35],[0,0.16666666666666666,0.25],[0.03333333333333333,0.21666666666666667,0.3],[0,0.08333333333333333],[0,0.08333333333333333],[0,0.08333333333333333],[0.1],[0.1],[0.1],[0.03333333333333333],[0.03333333333333333],[0.03333333333333333],[0],[0],[0],[0]],"curveDatas":{},"_curves":[{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/mode/wrap"},"position"],"data":{"keys":0,"values":[{"__type__":"cc.Vec3","y":-1000},{"__type__":"cc.Vec3","y":100},{"__type__":"cc.Vec3"}],"easingMethods":[null,"quadOut",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/gift/wrap"},"position"],"data":{"keys":1,"values":[{"__type__":"cc.Vec3","y":-700},{"__type__":"cc.Vec3","y":100},{"__type__":"cc.Vec3"}],"easingMethods":[null,"quadOut",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/suo/wrap"},"position"],"data":{"keys":2,"values":[{"__type__":"cc.Vec3","y":-850},{"__type__":"cc.Vec3","y":100},{"__type__":"cc.Vec3"}],"easingMethods":[null,"quadOut",null]}},{"modifiers":[{"__type__":"cc.ComponentModifier","component":"cc.SpriteComponent"},"color"],"data":{"keys":3,"values":[{"__type__":"cc.Color","r":251,"g":251,"b":246,"a":0},{"__type__":"cc.Color","r":251,"g":251,"b":246,"a":110}],"easingMethods":[null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"top/best"},"scale"],"data":{"keys":4,"values":[{"__type__":"cc.Vec3","x":0.5,"y":0.5,"z":1},{"__type__":"cc.Vec3","x":1,"y":1,"z":1}],"easingMethods":[null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"top/best"},{"__type__":"cc.ComponentModifier","component":"cc.SpriteComponent"},"color"],"data":{"keys":5,"values":[{"__type__":"cc.Color","r":255,"g":255,"b":255},{"__type__":"cc.Color","r":255,"g":255,"b":255}],"easingMethods":[null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/mode/wrap"},{"__type__":"cc.ComponentModifier","component":"cc.SpriteComponent"},"color"],"data":{"keys":6,"values":[{"__type__":"cc.Color","r":255,"g":255,"b":255}],"easingMethods":[null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/mode/wrap"},"active"],"data":{"keys":7,"values":[true],"easingMethods":[null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/mode/wrap"},"scale"],"data":{"keys":8,"values":[{"__type__":"cc.Vec3","x":1,"y":1,"z":1}],"easingMethods":[null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/suo/wrap"},"active"],"data":{"keys":9,"values":[true],"easingMethods":[null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/suo/wrap"},"scale"],"data":{"keys":10,"values":[{"__type__":"cc.Vec3","x":1,"y":1,"z":1}],"easingMethods":[null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/suo/wrap"},{"__type__":"cc.ComponentModifier","component":"cc.SpriteComponent"},"color"],"data":{"keys":11,"values":[{"__type__":"cc.Color","r":255,"g":255,"b":255}],"easingMethods":[null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/gift/wrap"},"active"],"data":{"keys":12,"values":[true],"easingMethods":[null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/gift/wrap"},{"__type__":"cc.ComponentModifier","component":"cc.SpriteComponent"},"color"],"data":{"keys":13,"values":[{"__type__":"cc.Color","r":255,"g":255,"b":255}],"easingMethods":[null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"items/gift/wrap"},"scale"],"data":{"keys":14,"values":[{"__type__":"cc.Vec3","x":1,"y":1,"z":1}],"easingMethods":[null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"top/best"},"active"],"data":{"keys":15,"values":[true],"easingMethods":[null]}}]},{"__type__":"cc.Material","_effectAsset":{"__uuid__":"1brw/JvvpFnIvdrxpFCgMZ"},"_techIdx":"1","_defines":[{}],"_states":[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],"_props":[{"albedo":{"__type__":"cc.Color","r":202,"g":202,"b":202,"a":0}}]},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"c29sCg8yxE84wLShO6K/KR","name":"share","rect":{"x":2,"y":3,"width":102,"height":104},"offset":{"x":-0.5,"y":-1.5},"originalSize":{"width":107,"height":107},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.AnimationClip","_name":"down","wrapMode":0,"_duration":1.35,"_keys":[[0,0.5,1.3333333333333333,1.35]],"curveDatas":{},"_curves":[{"modifiers":["position"],"data":{"keys":0,"values":[{"__type__":"cc.Vec3"},{"__type__":"cc.Vec3","y":0.5},{"__type__":"cc.Vec3","y":-1},{"__type__":"cc.Vec3","y":-1}],"easingMethods":["linear","sineOut",null,null]}}]},{"__type__":"cc.AnimationClip","_name":"reser","speed":0.4,"_duration":0.3333333333333333,"_keys":[[0,0.23333333333333334,0.3333333333333333]],"curveDatas":{},"_curves":[{"modifiers":[{"__type__":"cc.HierachyModifier","path":"reset"},"position"],"data":{"keys":0,"values":[{"__type__":"cc.Vec3","y":-120},{"__type__":"cc.Vec3","y":30},{"__type__":"cc.Vec3"}],"easingMethods":["cubicInOut","cubicOut",null]}}]},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"ceOCaq2fJCSpUwnJkYaJQm","name":"voice_close","rect":{"x":2,"y":3,"width":101,"height":104},"offset":{"x":-1,"y":-1.5},"originalSize":{"width":107,"height":107},"rotated":false,"capInsets":[0,0,0,0]}},[{"__type__":"cc.Prefab","data":{"__id__":1}},{"__type__":"cc.Node","_name":"Cube","_children":[{"__id__":2}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__id__":0},"fileId":"6bvXRqgcBJrLkj/DpWV/25","_synced":{"default":false,"serializable":false}}},{"__type__":"cc.Node","_name":"Cube","_parent":{"__id__":1},"_components":[{"__type__":"cc.ModelComponent","_name":"Cube<ModelComponent>","node":{"__id__":2},"_materials":[null],"_mesh":{"__uuid__":"12Y9dMgWdJKJGmTiZyQR9H@a804a"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__id__":0},"fileId":"97bKmKl6dLMokr6PWg3V5I","_synced":{"default":false,"serializable":false}},"_lpos":{"__type__":"cc.Vec3","y":1},"_lscale":{"__type__":"cc.Vec3","x":0.9800000000000001,"y":0.98,"z":0.9800000000000001}}],{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"d0/2gy0GtILKMQw4xshLWG","name":"liwu","rect":{"x":4,"y":4,"width":53,"height":55},"offset":{"x":0,"y":-1},"originalSize":{"width":61,"height":61},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.EffectAsset","_name":"builtin-particle","techniques":[{"name":"add","passes":[{"rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":1,"blendSrcAlpha":2,"blendDstAlpha":1}]},"program":"builtin-particle|particle-vs-legacy:lpvs_main|tinted-fs:add","depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"value":[1,1,0,0],"type":16},"tintColor":{"value":[0.5,0.5,0.5,0.5],"type":16}}}]},{"name":"alpha-blend","passes":[{"rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendSrcAlpha":2,"blendDstAlpha":4}]},"program":"builtin-particle|particle-vs-legacy:lpvs_main|tinted-fs:add","depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"value":[1,1,0,0],"type":16},"tintColor":{"value":[0.5,0.5,0.5,0.5],"type":16}}}]},{"name":"add-multiply","passes":[{"rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendSrcAlpha":2,"blendDstAlpha":4}]},"program":"builtin-particle|particle-vs-legacy:lpvs_main|tinted-fs:multiply","depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"value":[1,1,0,0],"type":16},"tintColor":{"value":[0.5,0.5,0.5,0.5],"type":16}}}]},{"name":"add-smooth","passes":[{"rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendSrcAlpha":2,"blendDstAlpha":4}]},"program":"builtin-particle|particle-vs-legacy:lpvs_main|no-tint-fs:addSmooth","depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"value":[1,1,0,0],"type":16}}}]},{"name":"premultiply-blend","passes":[{"rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendSrcAlpha":2,"blendDstAlpha":4}]},"program":"builtin-particle|particle-vs-legacy:lpvs_main|no-tint-fs:premultiplied","depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"value":[1,1,0,0],"type":16}}}]}],"shaders":[{"hash":522881683,"glsl3":{"vert":"\nprecision highp float;\n\nvec4 quaternionFromAxisAngle(float angle, vec3 axis){\n    angle /= 2.;\n    float s = sin(angle);\n    vec4 res;\n    res.xyz = s * axis;\n    res.w = cos(angle);\n    return res;\n}\n\nvec4 quaternionFromAxis(vec3 xAxis,vec3 yAxis,vec3 zAxis){\n    mat3 m = mat3(xAxis,yAxis,zAxis);\n    float trace = m[0][0] + m[1][1] + m[2][2];\n    vec4 quat;\n\n    if (trace > 0.) {\n        float s = 0.5 / sqrt(trace + 1.0);\n        quat.w = 0.25 / s;\n        quat.x = (m[2][1] - m[1][2]) * s;\n        quat.y = (m[0][2] - m[2][0]) * s;\n        quat.z = (m[1][0] - m[0][1]) * s;\n    } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n        float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n        quat.w = (m[2][1] - m[1][2]) / s;\n        quat.x = 0.25 * s;\n        quat.y = (m[0][1] + m[1][0]) / s;\n        quat.z = (m[0][2] + m[2][0]) / s;\n    } else if (m[1][1] > m[2][2]) {\n        float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n        quat.w = (m[0][2] - m[2][0]) / s;\n        quat.x = (m[0][1] + m[1][0]) / s;\n        quat.y = 0.25 * s;\n        quat.z = (m[1][2] + m[2][1]) / s;\n    } else {\n        float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n        quat.w = (m[1][0] - m[0][1]) / s;\n        quat.x = (m[0][2] + m[2][0]) / s;\n        quat.y = (m[1][2] + m[2][1]) / s;\n        quat.z = 0.25 * s;\n    }\n\n    float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n    if (len > 0.) {\n        len = 1. / sqrt(len);\n        quat.x = quat.x * len;\n        quat.y = quat.y * len;\n        quat.z = quat.z * len;\n        quat.w = quat.w * len;\n    }\n\n    return quat;\n}\n\nvec4 quaternionFromEuler(vec3 angle){\n    float x = angle.x / 2.;\n    float y = angle.y / 2.;\n    float z = angle.z / 2.;\n\n    float sx = sin(x);\n    float cx = cos(x);\n    float sy = sin(y);\n    float cy = cos(y);\n    float sz = sin(z);\n    float cz = cos(z);\n\n    vec4 quat = vec4(0);\n\n    quat.x = sx * cy * cz + cx * sy * sz;\n    quat.y = cx * sy * cz + sx * cy * sz;\n    quat.z = cx * cy * sz - sx * sy * cz;\n    quat.w = cx * cy * cz - sx * sy * sz;\n\n    return quat;\n}\n\nmat4 matrixFromRT(vec4 q, vec3 p){\n    float x2 = q.x + q.x;\n    float y2 = q.y + q.y;\n    float z2 = q.z + q.z;\n    float xx = q.x * x2;\n    float xy = q.x * y2;\n    float xz = q.x * z2;\n    float yy = q.y * y2;\n    float yz = q.y * z2;\n    float zz = q.z * z2;\n    float wx = q.w * x2;\n    float wy = q.w * y2;\n    float wz = q.w * z2;\n\n    return mat4(\n        1. - (yy + zz), xy + wz, xz - wy, 0,\n        xy - wz, 1. - (xx + zz), yz + wx, 0,\n        xz + wy, yz - wx, 1. - (xx + yy), 0,\n        p.x, p.y, p.z, 1\n    );\n}\n\nmat4 matFromRTS(vec4 q, vec3 t, vec3 s){\n    float x = q.x, y = q.y, z = q.z, w = q.w;\n    float x2 = x + x;\n    float y2 = y + y;\n    float z2 = z + z;\n\n    float xx = x * x2;\n    float xy = x * y2;\n    float xz = x * z2;\n    float yy = y * y2;\n    float yz = y * z2;\n    float zz = z * z2;\n    float wx = w * x2;\n    float wy = w * y2;\n    float wz = w * z2;\n    float sx = s.x;\n    float sy = s.y;\n    float sz = s.z;\n\n    return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n        (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n        (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n        t.x, t.y, t.z, 1);\n}\n\nvoid scaleMatrix(inout mat4 m, float s){\n    m[0].xyz *= s;\n    m[1].xyz *= s;\n    m[2].xyz *= s;\n}\n\nvec4 quatMultiply(vec4 a, vec4 b){\n    vec4 quat;\n    quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return quat;\n}\n\nvoid rotateVecFromQuat(inout vec3 v, vec4 q){\n    float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n    float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n    float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n    float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n    v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n    v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n    v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\n\nvec3 rotateVecFromAxis(vec3 v, vec3 axis, float theta){\n    return cos(theta) * v + sin(theta) * cross(v, axis) + (1. - cos(theta)) * dot(v, axis) * axis;\n}\n\nvec3 rotateInLocalSpace(vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n    vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n    vec4 rotQuat = quatMultiply(viewQuat, q);\n    rotateVecFromQuat(pos, rotQuat);\n    return pos;\n}\n\nvoid rotateCorner(inout vec2 corner, float angle){\n    float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n    float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n    corner.x = xOS;\n    corner.y = yOS;\n}\n\nuniform Constants{\n    vec4 mainTiling_Offset;\n    vec4 frameTile_velLenScale;\n    vec4 scale;\n};\nuniform CCGlobal {\n  vec4 cc_time;\n  vec4 cc_screenSize;\n  vec4 cc_screenScale;\n  vec4 cc_nativeSize;\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_exposure;\n  vec4 cc_mainLitDir;\n  vec4 cc_mainLitColor;\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\nuniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n};\n\nout vec2 uv;\nout vec4 color;\n\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n    , mat4 viewInv\n#endif\n#if CC_USE_STRETCHED_BILLBOARD\n    , vec3 eye\n    , vec4 velocity\n    , float velocityScale\n    , float lengthScale\n    , float xIndex\n#endif\n) {\n#if CC_USE_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n    vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n    vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_USE_STRETCHED_BILLBOARD\n    vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n    vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n    pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_USE_HORIZONTAL_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = vec3(1, 0, 0);\n    vec3 camY = vec3(0, 0, -1);\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_USE_VERTICAL_BILLBOARD\n    vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n    rotateCorner(viewSpaceVert, q.z);\n    vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n    vec3 camY = vec3(0, 1, 0);\n    vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n    pos.xyz += offset;\n#else\n    pos.x += vertOffset.x;\n    pos.y += vertOffset.y;\n#endif\n}\n\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile){\n    vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n    aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if !CC_USE_MESH\n    vertIndex.y = 1. - vertIndex.y;\n#endif\n    return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\n\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n\n#if CC_USE_STRETCHED_BILLBOARD\n    in vec3 a_color1;\n#endif\n\n#if CC_USE_MESH\n    in vec3 a_texCoord3;\n    in vec3 a_normal;\n    in vec4 a_color1;\n#endif\n\nvec4 lpvs_main() {\n    vec3 compScale = scale.xyz * a_texCoord1;\n    vec4 pos = vec4(a_position, 1);\n#if CC_USE_STRETCHED_BILLBOARD\n    vec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n\n#if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_USE_STRETCHED_BILLBOARD\n        velocity = cc_matWorld * velocity;\n    #endif\n#endif\n\n#if !CC_USE_MESH\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n\n    #if CC_USE_BILLBOARD\n        vec3 rotEuler = a_texCoord2;\n    #elif CC_USE_STRETCHED_BILLBOARD\n        vec3 rotEuler = vec3(0.);\n    #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n        , cc_matViewInv\n    #endif\n    #if CC_USE_STRETCHED_BILLBOARD\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_texCoord.x\n    #endif\n    );\n\n    color = a_color;\n#else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n#endif\n    uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n\n    pos = cc_matViewProj * pos;\n\n    return pos;\n}\n\nvoid main() { gl_Position = lpvs_main(); }\n","frag":"\nprecision highp float;\nuniform CCGlobal {\n  vec4 cc_time;\n  vec4 cc_screenSize;\n  vec4 cc_screenScale;\n  vec4 cc_nativeSize;\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_exposure;\n  vec4 cc_mainLitDir;\n  vec4 cc_mainLitColor;\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\n\nvec3 SRGBToLinear(vec3 gamma)\n{\n\treturn pow(gamma, vec3(2.2));\n}\n\nvec3 LinearToSRGB(vec3 linear)\n{\n\treturn pow(linear, vec3(0.454545));\n}\n\nvec4 CCFragOutput(vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n\t#endif\n\treturn color;\n}\n\nin vec2 uv;\nin vec4 color;\n\nuniform sampler2D mainTexture;\nuniform FragConstants {\n  vec4 tintColor;\n};\n\nvec4 add () {\n  vec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n  return CCFragOutput(col);\n}\n\nvec4 multiply () {\n  vec4 col;\n  vec4 texColor = texture(mainTexture, uv);\n  col.rgb = tintColor.rgb * texColor.rgb * color.rgb * vec3(2.0);\n  col.a = (1.0 - texColor.a) * (tintColor.a * color.a * 2.0);\n  return CCFragOutput(col);\n}\n\nout vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }\n"},"glsl1":{"vert":"\nprecision highp float;\n\nvec4 quaternionFromAxisAngle(float angle, vec3 axis){\n    angle /= 2.;\n    float s = sin(angle);\n    vec4 res;\n    res.xyz = s * axis;\n    res.w = cos(angle);\n    return res;\n}\n\nvec4 quaternionFromAxis(vec3 xAxis,vec3 yAxis,vec3 zAxis){\n    mat3 m = mat3(xAxis,yAxis,zAxis);\n    float trace = m[0][0] + m[1][1] + m[2][2];\n    vec4 quat;\n\n    if (trace > 0.) {\n        float s = 0.5 / sqrt(trace + 1.0);\n        quat.w = 0.25 / s;\n        quat.x = (m[2][1] - m[1][2]) * s;\n        quat.y = (m[0][2] - m[2][0]) * s;\n        quat.z = (m[1][0] - m[0][1]) * s;\n    } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n        float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n        quat.w = (m[2][1] - m[1][2]) / s;\n        quat.x = 0.25 * s;\n        quat.y = (m[0][1] + m[1][0]) / s;\n        quat.z = (m[0][2] + m[2][0]) / s;\n    } else if (m[1][1] > m[2][2]) {\n        float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n        quat.w = (m[0][2] - m[2][0]) / s;\n        quat.x = (m[0][1] + m[1][0]) / s;\n        quat.y = 0.25 * s;\n        quat.z = (m[1][2] + m[2][1]) / s;\n    } else {\n        float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n        quat.w = (m[1][0] - m[0][1]) / s;\n        quat.x = (m[0][2] + m[2][0]) / s;\n        quat.y = (m[1][2] + m[2][1]) / s;\n        quat.z = 0.25 * s;\n    }\n\n    float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n    if (len > 0.) {\n        len = 1. / sqrt(len);\n        quat.x = quat.x * len;\n        quat.y = quat.y * len;\n        quat.z = quat.z * len;\n        quat.w = quat.w * len;\n    }\n\n    return quat;\n}\n\nvec4 quaternionFromEuler(vec3 angle){\n    float x = angle.x / 2.;\n    float y = angle.y / 2.;\n    float z = angle.z / 2.;\n\n    float sx = sin(x);\n    float cx = cos(x);\n    float sy = sin(y);\n    float cy = cos(y);\n    float sz = sin(z);\n    float cz = cos(z);\n\n    vec4 quat = vec4(0);\n\n    quat.x = sx * cy * cz + cx * sy * sz;\n    quat.y = cx * sy * cz + sx * cy * sz;\n    quat.z = cx * cy * sz - sx * sy * cz;\n    quat.w = cx * cy * cz - sx * sy * sz;\n\n    return quat;\n}\n\nmat4 matrixFromRT(vec4 q, vec3 p){\n    float x2 = q.x + q.x;\n    float y2 = q.y + q.y;\n    float z2 = q.z + q.z;\n    float xx = q.x * x2;\n    float xy = q.x * y2;\n    float xz = q.x * z2;\n    float yy = q.y * y2;\n    float yz = q.y * z2;\n    float zz = q.z * z2;\n    float wx = q.w * x2;\n    float wy = q.w * y2;\n    float wz = q.w * z2;\n\n    return mat4(\n        1. - (yy + zz), xy + wz, xz - wy, 0,\n        xy - wz, 1. - (xx + zz), yz + wx, 0,\n        xz + wy, yz - wx, 1. - (xx + yy), 0,\n        p.x, p.y, p.z, 1\n    );\n}\n\nmat4 matFromRTS(vec4 q, vec3 t, vec3 s){\n    float x = q.x, y = q.y, z = q.z, w = q.w;\n    float x2 = x + x;\n    float y2 = y + y;\n    float z2 = z + z;\n\n    float xx = x * x2;\n    float xy = x * y2;\n    float xz = x * z2;\n    float yy = y * y2;\n    float yz = y * z2;\n    float zz = z * z2;\n    float wx = w * x2;\n    float wy = w * y2;\n    float wz = w * z2;\n    float sx = s.x;\n    float sy = s.y;\n    float sz = s.z;\n\n    return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n        (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n        (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n        t.x, t.y, t.z, 1);\n}\n\nvoid scaleMatrix(inout mat4 m, float s){\n    m[0].xyz *= s;\n    m[1].xyz *= s;\n    m[2].xyz *= s;\n}\n\nvec4 quatMultiply(vec4 a, vec4 b){\n    vec4 quat;\n    quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return quat;\n}\n\nvoid rotateVecFromQuat(inout vec3 v, vec4 q){\n    float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n    float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n    float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n    float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n    v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n    v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n    v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\n\nvec3 rotateVecFromAxis(vec3 v, vec3 axis, float theta){\n    return cos(theta) * v + sin(theta) * cross(v, axis) + (1. - cos(theta)) * dot(v, axis) * axis;\n}\n\nvec3 rotateInLocalSpace(vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n    vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n    vec4 rotQuat = quatMultiply(viewQuat, q);\n    rotateVecFromQuat(pos, rotQuat);\n    return pos;\n}\n\nvoid rotateCorner(inout vec2 corner, float angle){\n    float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n    float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n    corner.x = xOS;\n    corner.y = yOS;\n}\n\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform mat4 cc_matView;\nuniform mat4 cc_matViewInv;\nuniform mat4 cc_matViewProj;\nuniform vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\n\nvarying vec2 uv;\nvarying vec4 color;\n\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n    , mat4 viewInv\n#endif\n#if CC_USE_STRETCHED_BILLBOARD\n    , vec3 eye\n    , vec4 velocity\n    , float velocityScale\n    , float lengthScale\n    , float xIndex\n#endif\n) {\n#if CC_USE_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n    vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n    vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_USE_STRETCHED_BILLBOARD\n    vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n    vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n    pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_USE_HORIZONTAL_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = vec3(1, 0, 0);\n    vec3 camY = vec3(0, 0, -1);\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_USE_VERTICAL_BILLBOARD\n    vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n    rotateCorner(viewSpaceVert, q.z);\n    vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n    vec3 camY = vec3(0, 1, 0);\n    vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n    pos.xyz += offset;\n#else\n    pos.x += vertOffset.x;\n    pos.y += vertOffset.y;\n#endif\n}\n\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile){\n    vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n    aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if !CC_USE_MESH\n    vertIndex.y = 1. - vertIndex.y;\n#endif\n    return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\n\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n\n#if CC_USE_STRETCHED_BILLBOARD\n    attribute vec3 a_color1;\n#endif\n\n#if CC_USE_MESH\n    attribute vec3 a_texCoord3;\n    attribute vec3 a_normal;\n    attribute vec4 a_color1;\n#endif\n\nvec4 lpvs_main() {\n    vec3 compScale = scale.xyz * a_texCoord1;\n    vec4 pos = vec4(a_position, 1);\n#if CC_USE_STRETCHED_BILLBOARD\n    vec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n\n#if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_USE_STRETCHED_BILLBOARD\n        velocity = cc_matWorld * velocity;\n    #endif\n#endif\n\n#if !CC_USE_MESH\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n\n    #if CC_USE_BILLBOARD\n        vec3 rotEuler = a_texCoord2;\n    #elif CC_USE_STRETCHED_BILLBOARD\n        vec3 rotEuler = vec3(0.);\n    #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n        , cc_matViewInv\n    #endif\n    #if CC_USE_STRETCHED_BILLBOARD\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_texCoord.x\n    #endif\n    );\n\n    color = a_color;\n#else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n#endif\n    uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n\n    pos = cc_matViewProj * pos;\n\n    return pos;\n}\n\nvoid main() { gl_Position = lpvs_main(); }\n","frag":"\nprecision highp float;\nuniform vec4 cc_exposure;\n\nvec3 SRGBToLinear(vec3 gamma)\n{\n\treturn pow(gamma, vec3(2.2));\n}\n\nvec3 LinearToSRGB(vec3 linear)\n{\n\treturn pow(linear, vec3(0.454545));\n}\n\nvec4 CCFragOutput(vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n\t#endif\n\treturn color;\n}\n\nvarying vec2 uv;\nvarying vec4 color;\n\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\n\nvec4 add () {\n  vec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\n  return CCFragOutput(col);\n}\n\nvec4 multiply () {\n  vec4 col;\n  vec4 texColor = texture2D(mainTexture, uv);\n  col.rgb = tintColor.rgb * texColor.rgb * color.rgb * vec3(2.0);\n  col.a = (1.0 - texColor.a) * (tintColor.a * color.a * 2.0);\n  return CCFragOutput(col);\n}\n\nvoid main() { gl_FragColor = add(); }\n"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"CC_USE_BILLBOARD","type":"boolean"},{"name":"CC_USE_STRETCHED_BILLBOARD","type":"boolean"},{"name":"CC_USE_HORIZONTAL_BILLBOARD","type":"boolean"},{"name":"CC_USE_VERTICAL_BILLBOARD","type":"boolean"},{"name":"CC_USE_MESH","type":"boolean"},{"name":"CC_USE_WORLD_SPACE","type":"boolean"},{"name":"CC_USE_HDR","type":"boolean"}],"blocks":[{"name":"Constants","members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1}],"defines":[],"binding":0},{"name":"FragConstants","members":[{"name":"tintColor","type":16,"count":1}],"defines":[],"binding":1}],"samplers":[{"name":"mainTexture","type":28,"count":1,"defines":[],"binding":30}],"name":"builtin-particle|particle-vs-legacy:lpvs_main|tinted-fs:add"},{"hash":1830161070,"glsl3":{"vert":"\nprecision highp float;\n\nvec4 quaternionFromAxisAngle(float angle, vec3 axis){\n    angle /= 2.;\n    float s = sin(angle);\n    vec4 res;\n    res.xyz = s * axis;\n    res.w = cos(angle);\n    return res;\n}\n\nvec4 quaternionFromAxis(vec3 xAxis,vec3 yAxis,vec3 zAxis){\n    mat3 m = mat3(xAxis,yAxis,zAxis);\n    float trace = m[0][0] + m[1][1] + m[2][2];\n    vec4 quat;\n\n    if (trace > 0.) {\n        float s = 0.5 / sqrt(trace + 1.0);\n        quat.w = 0.25 / s;\n        quat.x = (m[2][1] - m[1][2]) * s;\n        quat.y = (m[0][2] - m[2][0]) * s;\n        quat.z = (m[1][0] - m[0][1]) * s;\n    } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n        float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n        quat.w = (m[2][1] - m[1][2]) / s;\n        quat.x = 0.25 * s;\n        quat.y = (m[0][1] + m[1][0]) / s;\n        quat.z = (m[0][2] + m[2][0]) / s;\n    } else if (m[1][1] > m[2][2]) {\n        float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n        quat.w = (m[0][2] - m[2][0]) / s;\n        quat.x = (m[0][1] + m[1][0]) / s;\n        quat.y = 0.25 * s;\n        quat.z = (m[1][2] + m[2][1]) / s;\n    } else {\n        float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n        quat.w = (m[1][0] - m[0][1]) / s;\n        quat.x = (m[0][2] + m[2][0]) / s;\n        quat.y = (m[1][2] + m[2][1]) / s;\n        quat.z = 0.25 * s;\n    }\n\n    float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n    if (len > 0.) {\n        len = 1. / sqrt(len);\n        quat.x = quat.x * len;\n        quat.y = quat.y * len;\n        quat.z = quat.z * len;\n        quat.w = quat.w * len;\n    }\n\n    return quat;\n}\n\nvec4 quaternionFromEuler(vec3 angle){\n    float x = angle.x / 2.;\n    float y = angle.y / 2.;\n    float z = angle.z / 2.;\n\n    float sx = sin(x);\n    float cx = cos(x);\n    float sy = sin(y);\n    float cy = cos(y);\n    float sz = sin(z);\n    float cz = cos(z);\n\n    vec4 quat = vec4(0);\n\n    quat.x = sx * cy * cz + cx * sy * sz;\n    quat.y = cx * sy * cz + sx * cy * sz;\n    quat.z = cx * cy * sz - sx * sy * cz;\n    quat.w = cx * cy * cz - sx * sy * sz;\n\n    return quat;\n}\n\nmat4 matrixFromRT(vec4 q, vec3 p){\n    float x2 = q.x + q.x;\n    float y2 = q.y + q.y;\n    float z2 = q.z + q.z;\n    float xx = q.x * x2;\n    float xy = q.x * y2;\n    float xz = q.x * z2;\n    float yy = q.y * y2;\n    float yz = q.y * z2;\n    float zz = q.z * z2;\n    float wx = q.w * x2;\n    float wy = q.w * y2;\n    float wz = q.w * z2;\n\n    return mat4(\n        1. - (yy + zz), xy + wz, xz - wy, 0,\n        xy - wz, 1. - (xx + zz), yz + wx, 0,\n        xz + wy, yz - wx, 1. - (xx + yy), 0,\n        p.x, p.y, p.z, 1\n    );\n}\n\nmat4 matFromRTS(vec4 q, vec3 t, vec3 s){\n    float x = q.x, y = q.y, z = q.z, w = q.w;\n    float x2 = x + x;\n    float y2 = y + y;\n    float z2 = z + z;\n\n    float xx = x * x2;\n    float xy = x * y2;\n    float xz = x * z2;\n    float yy = y * y2;\n    float yz = y * z2;\n    float zz = z * z2;\n    float wx = w * x2;\n    float wy = w * y2;\n    float wz = w * z2;\n    float sx = s.x;\n    float sy = s.y;\n    float sz = s.z;\n\n    return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n        (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n        (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n        t.x, t.y, t.z, 1);\n}\n\nvoid scaleMatrix(inout mat4 m, float s){\n    m[0].xyz *= s;\n    m[1].xyz *= s;\n    m[2].xyz *= s;\n}\n\nvec4 quatMultiply(vec4 a, vec4 b){\n    vec4 quat;\n    quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return quat;\n}\n\nvoid rotateVecFromQuat(inout vec3 v, vec4 q){\n    float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n    float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n    float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n    float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n    v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n    v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n    v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\n\nvec3 rotateVecFromAxis(vec3 v, vec3 axis, float theta){\n    return cos(theta) * v + sin(theta) * cross(v, axis) + (1. - cos(theta)) * dot(v, axis) * axis;\n}\n\nvec3 rotateInLocalSpace(vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n    vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n    vec4 rotQuat = quatMultiply(viewQuat, q);\n    rotateVecFromQuat(pos, rotQuat);\n    return pos;\n}\n\nvoid rotateCorner(inout vec2 corner, float angle){\n    float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n    float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n    corner.x = xOS;\n    corner.y = yOS;\n}\n\nuniform Constants{\n    vec4 mainTiling_Offset;\n    vec4 frameTile_velLenScale;\n    vec4 scale;\n};\nuniform CCGlobal {\n  vec4 cc_time;\n  vec4 cc_screenSize;\n  vec4 cc_screenScale;\n  vec4 cc_nativeSize;\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_exposure;\n  vec4 cc_mainLitDir;\n  vec4 cc_mainLitColor;\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\nuniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n};\n\nout vec2 uv;\nout vec4 color;\n\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n    , mat4 viewInv\n#endif\n#if CC_USE_STRETCHED_BILLBOARD\n    , vec3 eye\n    , vec4 velocity\n    , float velocityScale\n    , float lengthScale\n    , float xIndex\n#endif\n) {\n#if CC_USE_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n    vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n    vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_USE_STRETCHED_BILLBOARD\n    vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n    vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n    pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_USE_HORIZONTAL_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = vec3(1, 0, 0);\n    vec3 camY = vec3(0, 0, -1);\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_USE_VERTICAL_BILLBOARD\n    vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n    rotateCorner(viewSpaceVert, q.z);\n    vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n    vec3 camY = vec3(0, 1, 0);\n    vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n    pos.xyz += offset;\n#else\n    pos.x += vertOffset.x;\n    pos.y += vertOffset.y;\n#endif\n}\n\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile){\n    vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n    aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if !CC_USE_MESH\n    vertIndex.y = 1. - vertIndex.y;\n#endif\n    return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\n\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n\n#if CC_USE_STRETCHED_BILLBOARD\n    in vec3 a_color1;\n#endif\n\n#if CC_USE_MESH\n    in vec3 a_texCoord3;\n    in vec3 a_normal;\n    in vec4 a_color1;\n#endif\n\nvec4 lpvs_main() {\n    vec3 compScale = scale.xyz * a_texCoord1;\n    vec4 pos = vec4(a_position, 1);\n#if CC_USE_STRETCHED_BILLBOARD\n    vec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n\n#if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_USE_STRETCHED_BILLBOARD\n        velocity = cc_matWorld * velocity;\n    #endif\n#endif\n\n#if !CC_USE_MESH\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n\n    #if CC_USE_BILLBOARD\n        vec3 rotEuler = a_texCoord2;\n    #elif CC_USE_STRETCHED_BILLBOARD\n        vec3 rotEuler = vec3(0.);\n    #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n        , cc_matViewInv\n    #endif\n    #if CC_USE_STRETCHED_BILLBOARD\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_texCoord.x\n    #endif\n    );\n\n    color = a_color;\n#else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n#endif\n    uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n\n    pos = cc_matViewProj * pos;\n\n    return pos;\n}\n\nvoid main() { gl_Position = lpvs_main(); }\n","frag":"\nprecision highp float;\nuniform CCGlobal {\n  vec4 cc_time;\n  vec4 cc_screenSize;\n  vec4 cc_screenScale;\n  vec4 cc_nativeSize;\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_exposure;\n  vec4 cc_mainLitDir;\n  vec4 cc_mainLitColor;\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\n\nvec3 SRGBToLinear(vec3 gamma)\n{\n\treturn pow(gamma, vec3(2.2));\n}\n\nvec3 LinearToSRGB(vec3 linear)\n{\n\treturn pow(linear, vec3(0.454545));\n}\n\nvec4 CCFragOutput(vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n\t#endif\n\treturn color;\n}\n\nin vec2 uv;\nin vec4 color;\n\nuniform sampler2D mainTexture;\nuniform FragConstants {\n  vec4 tintColor;\n};\n\nvec4 add () {\n  vec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n  return CCFragOutput(col);\n}\n\nvec4 multiply () {\n  vec4 col;\n  vec4 texColor = texture(mainTexture, uv);\n  col.rgb = tintColor.rgb * texColor.rgb * color.rgb * vec3(2.0);\n  col.a = (1.0 - texColor.a) * (tintColor.a * color.a * 2.0);\n  return CCFragOutput(col);\n}\n\nout vec4 cc_FragColor;\nvoid main() { cc_FragColor = multiply(); }\n"},"glsl1":{"vert":"\nprecision highp float;\n\nvec4 quaternionFromAxisAngle(float angle, vec3 axis){\n    angle /= 2.;\n    float s = sin(angle);\n    vec4 res;\n    res.xyz = s * axis;\n    res.w = cos(angle);\n    return res;\n}\n\nvec4 quaternionFromAxis(vec3 xAxis,vec3 yAxis,vec3 zAxis){\n    mat3 m = mat3(xAxis,yAxis,zAxis);\n    float trace = m[0][0] + m[1][1] + m[2][2];\n    vec4 quat;\n\n    if (trace > 0.) {\n        float s = 0.5 / sqrt(trace + 1.0);\n        quat.w = 0.25 / s;\n        quat.x = (m[2][1] - m[1][2]) * s;\n        quat.y = (m[0][2] - m[2][0]) * s;\n        quat.z = (m[1][0] - m[0][1]) * s;\n    } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n        float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n        quat.w = (m[2][1] - m[1][2]) / s;\n        quat.x = 0.25 * s;\n        quat.y = (m[0][1] + m[1][0]) / s;\n        quat.z = (m[0][2] + m[2][0]) / s;\n    } else if (m[1][1] > m[2][2]) {\n        float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n        quat.w = (m[0][2] - m[2][0]) / s;\n        quat.x = (m[0][1] + m[1][0]) / s;\n        quat.y = 0.25 * s;\n        quat.z = (m[1][2] + m[2][1]) / s;\n    } else {\n        float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n        quat.w = (m[1][0] - m[0][1]) / s;\n        quat.x = (m[0][2] + m[2][0]) / s;\n        quat.y = (m[1][2] + m[2][1]) / s;\n        quat.z = 0.25 * s;\n    }\n\n    float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n    if (len > 0.) {\n        len = 1. / sqrt(len);\n        quat.x = quat.x * len;\n        quat.y = quat.y * len;\n        quat.z = quat.z * len;\n        quat.w = quat.w * len;\n    }\n\n    return quat;\n}\n\nvec4 quaternionFromEuler(vec3 angle){\n    float x = angle.x / 2.;\n    float y = angle.y / 2.;\n    float z = angle.z / 2.;\n\n    float sx = sin(x);\n    float cx = cos(x);\n    float sy = sin(y);\n    float cy = cos(y);\n    float sz = sin(z);\n    float cz = cos(z);\n\n    vec4 quat = vec4(0);\n\n    quat.x = sx * cy * cz + cx * sy * sz;\n    quat.y = cx * sy * cz + sx * cy * sz;\n    quat.z = cx * cy * sz - sx * sy * cz;\n    quat.w = cx * cy * cz - sx * sy * sz;\n\n    return quat;\n}\n\nmat4 matrixFromRT(vec4 q, vec3 p){\n    float x2 = q.x + q.x;\n    float y2 = q.y + q.y;\n    float z2 = q.z + q.z;\n    float xx = q.x * x2;\n    float xy = q.x * y2;\n    float xz = q.x * z2;\n    float yy = q.y * y2;\n    float yz = q.y * z2;\n    float zz = q.z * z2;\n    float wx = q.w * x2;\n    float wy = q.w * y2;\n    float wz = q.w * z2;\n\n    return mat4(\n        1. - (yy + zz), xy + wz, xz - wy, 0,\n        xy - wz, 1. - (xx + zz), yz + wx, 0,\n        xz + wy, yz - wx, 1. - (xx + yy), 0,\n        p.x, p.y, p.z, 1\n    );\n}\n\nmat4 matFromRTS(vec4 q, vec3 t, vec3 s){\n    float x = q.x, y = q.y, z = q.z, w = q.w;\n    float x2 = x + x;\n    float y2 = y + y;\n    float z2 = z + z;\n\n    float xx = x * x2;\n    float xy = x * y2;\n    float xz = x * z2;\n    float yy = y * y2;\n    float yz = y * z2;\n    float zz = z * z2;\n    float wx = w * x2;\n    float wy = w * y2;\n    float wz = w * z2;\n    float sx = s.x;\n    float sy = s.y;\n    float sz = s.z;\n\n    return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n        (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n        (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n        t.x, t.y, t.z, 1);\n}\n\nvoid scaleMatrix(inout mat4 m, float s){\n    m[0].xyz *= s;\n    m[1].xyz *= s;\n    m[2].xyz *= s;\n}\n\nvec4 quatMultiply(vec4 a, vec4 b){\n    vec4 quat;\n    quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return quat;\n}\n\nvoid rotateVecFromQuat(inout vec3 v, vec4 q){\n    float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n    float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n    float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n    float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n    v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n    v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n    v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\n\nvec3 rotateVecFromAxis(vec3 v, vec3 axis, float theta){\n    return cos(theta) * v + sin(theta) * cross(v, axis) + (1. - cos(theta)) * dot(v, axis) * axis;\n}\n\nvec3 rotateInLocalSpace(vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n    vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n    vec4 rotQuat = quatMultiply(viewQuat, q);\n    rotateVecFromQuat(pos, rotQuat);\n    return pos;\n}\n\nvoid rotateCorner(inout vec2 corner, float angle){\n    float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n    float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n    corner.x = xOS;\n    corner.y = yOS;\n}\n\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform mat4 cc_matView;\nuniform mat4 cc_matViewInv;\nuniform mat4 cc_matViewProj;\nuniform vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\n\nvarying vec2 uv;\nvarying vec4 color;\n\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n    , mat4 viewInv\n#endif\n#if CC_USE_STRETCHED_BILLBOARD\n    , vec3 eye\n    , vec4 velocity\n    , float velocityScale\n    , float lengthScale\n    , float xIndex\n#endif\n) {\n#if CC_USE_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n    vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n    vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_USE_STRETCHED_BILLBOARD\n    vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n    vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n    pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_USE_HORIZONTAL_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = vec3(1, 0, 0);\n    vec3 camY = vec3(0, 0, -1);\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_USE_VERTICAL_BILLBOARD\n    vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n    rotateCorner(viewSpaceVert, q.z);\n    vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n    vec3 camY = vec3(0, 1, 0);\n    vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n    pos.xyz += offset;\n#else\n    pos.x += vertOffset.x;\n    pos.y += vertOffset.y;\n#endif\n}\n\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile){\n    vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n    aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if !CC_USE_MESH\n    vertIndex.y = 1. - vertIndex.y;\n#endif\n    return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\n\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n\n#if CC_USE_STRETCHED_BILLBOARD\n    attribute vec3 a_color1;\n#endif\n\n#if CC_USE_MESH\n    attribute vec3 a_texCoord3;\n    attribute vec3 a_normal;\n    attribute vec4 a_color1;\n#endif\n\nvec4 lpvs_main() {\n    vec3 compScale = scale.xyz * a_texCoord1;\n    vec4 pos = vec4(a_position, 1);\n#if CC_USE_STRETCHED_BILLBOARD\n    vec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n\n#if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_USE_STRETCHED_BILLBOARD\n        velocity = cc_matWorld * velocity;\n    #endif\n#endif\n\n#if !CC_USE_MESH\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n\n    #if CC_USE_BILLBOARD\n        vec3 rotEuler = a_texCoord2;\n    #elif CC_USE_STRETCHED_BILLBOARD\n        vec3 rotEuler = vec3(0.);\n    #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n        , cc_matViewInv\n    #endif\n    #if CC_USE_STRETCHED_BILLBOARD\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_texCoord.x\n    #endif\n    );\n\n    color = a_color;\n#else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n#endif\n    uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n\n    pos = cc_matViewProj * pos;\n\n    return pos;\n}\n\nvoid main() { gl_Position = lpvs_main(); }\n","frag":"\nprecision highp float;\nuniform vec4 cc_exposure;\n\nvec3 SRGBToLinear(vec3 gamma)\n{\n\treturn pow(gamma, vec3(2.2));\n}\n\nvec3 LinearToSRGB(vec3 linear)\n{\n\treturn pow(linear, vec3(0.454545));\n}\n\nvec4 CCFragOutput(vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n\t#endif\n\treturn color;\n}\n\nvarying vec2 uv;\nvarying vec4 color;\n\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\n\nvec4 add () {\n  vec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\n  return CCFragOutput(col);\n}\n\nvec4 multiply () {\n  vec4 col;\n  vec4 texColor = texture2D(mainTexture, uv);\n  col.rgb = tintColor.rgb * texColor.rgb * color.rgb * vec3(2.0);\n  col.a = (1.0 - texColor.a) * (tintColor.a * color.a * 2.0);\n  return CCFragOutput(col);\n}\n\nvoid main() { gl_FragColor = multiply(); }\n"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"CC_USE_BILLBOARD","type":"boolean"},{"name":"CC_USE_STRETCHED_BILLBOARD","type":"boolean"},{"name":"CC_USE_HORIZONTAL_BILLBOARD","type":"boolean"},{"name":"CC_USE_VERTICAL_BILLBOARD","type":"boolean"},{"name":"CC_USE_MESH","type":"boolean"},{"name":"CC_USE_WORLD_SPACE","type":"boolean"},{"name":"CC_USE_HDR","type":"boolean"}],"blocks":[{"name":"Constants","members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1}],"defines":[],"binding":0},{"name":"FragConstants","members":[{"name":"tintColor","type":16,"count":1}],"defines":[],"binding":1}],"samplers":[{"name":"mainTexture","type":28,"count":1,"defines":[],"binding":30}],"name":"builtin-particle|particle-vs-legacy:lpvs_main|tinted-fs:multiply"},{"hash":4017285573,"glsl3":{"vert":"\nprecision highp float;\n\nvec4 quaternionFromAxisAngle(float angle, vec3 axis){\n    angle /= 2.;\n    float s = sin(angle);\n    vec4 res;\n    res.xyz = s * axis;\n    res.w = cos(angle);\n    return res;\n}\n\nvec4 quaternionFromAxis(vec3 xAxis,vec3 yAxis,vec3 zAxis){\n    mat3 m = mat3(xAxis,yAxis,zAxis);\n    float trace = m[0][0] + m[1][1] + m[2][2];\n    vec4 quat;\n\n    if (trace > 0.) {\n        float s = 0.5 / sqrt(trace + 1.0);\n        quat.w = 0.25 / s;\n        quat.x = (m[2][1] - m[1][2]) * s;\n        quat.y = (m[0][2] - m[2][0]) * s;\n        quat.z = (m[1][0] - m[0][1]) * s;\n    } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n        float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n        quat.w = (m[2][1] - m[1][2]) / s;\n        quat.x = 0.25 * s;\n        quat.y = (m[0][1] + m[1][0]) / s;\n        quat.z = (m[0][2] + m[2][0]) / s;\n    } else if (m[1][1] > m[2][2]) {\n        float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n        quat.w = (m[0][2] - m[2][0]) / s;\n        quat.x = (m[0][1] + m[1][0]) / s;\n        quat.y = 0.25 * s;\n        quat.z = (m[1][2] + m[2][1]) / s;\n    } else {\n        float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n        quat.w = (m[1][0] - m[0][1]) / s;\n        quat.x = (m[0][2] + m[2][0]) / s;\n        quat.y = (m[1][2] + m[2][1]) / s;\n        quat.z = 0.25 * s;\n    }\n\n    float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n    if (len > 0.) {\n        len = 1. / sqrt(len);\n        quat.x = quat.x * len;\n        quat.y = quat.y * len;\n        quat.z = quat.z * len;\n        quat.w = quat.w * len;\n    }\n\n    return quat;\n}\n\nvec4 quaternionFromEuler(vec3 angle){\n    float x = angle.x / 2.;\n    float y = angle.y / 2.;\n    float z = angle.z / 2.;\n\n    float sx = sin(x);\n    float cx = cos(x);\n    float sy = sin(y);\n    float cy = cos(y);\n    float sz = sin(z);\n    float cz = cos(z);\n\n    vec4 quat = vec4(0);\n\n    quat.x = sx * cy * cz + cx * sy * sz;\n    quat.y = cx * sy * cz + sx * cy * sz;\n    quat.z = cx * cy * sz - sx * sy * cz;\n    quat.w = cx * cy * cz - sx * sy * sz;\n\n    return quat;\n}\n\nmat4 matrixFromRT(vec4 q, vec3 p){\n    float x2 = q.x + q.x;\n    float y2 = q.y + q.y;\n    float z2 = q.z + q.z;\n    float xx = q.x * x2;\n    float xy = q.x * y2;\n    float xz = q.x * z2;\n    float yy = q.y * y2;\n    float yz = q.y * z2;\n    float zz = q.z * z2;\n    float wx = q.w * x2;\n    float wy = q.w * y2;\n    float wz = q.w * z2;\n\n    return mat4(\n        1. - (yy + zz), xy + wz, xz - wy, 0,\n        xy - wz, 1. - (xx + zz), yz + wx, 0,\n        xz + wy, yz - wx, 1. - (xx + yy), 0,\n        p.x, p.y, p.z, 1\n    );\n}\n\nmat4 matFromRTS(vec4 q, vec3 t, vec3 s){\n    float x = q.x, y = q.y, z = q.z, w = q.w;\n    float x2 = x + x;\n    float y2 = y + y;\n    float z2 = z + z;\n\n    float xx = x * x2;\n    float xy = x * y2;\n    float xz = x * z2;\n    float yy = y * y2;\n    float yz = y * z2;\n    float zz = z * z2;\n    float wx = w * x2;\n    float wy = w * y2;\n    float wz = w * z2;\n    float sx = s.x;\n    float sy = s.y;\n    float sz = s.z;\n\n    return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n        (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n        (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n        t.x, t.y, t.z, 1);\n}\n\nvoid scaleMatrix(inout mat4 m, float s){\n    m[0].xyz *= s;\n    m[1].xyz *= s;\n    m[2].xyz *= s;\n}\n\nvec4 quatMultiply(vec4 a, vec4 b){\n    vec4 quat;\n    quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return quat;\n}\n\nvoid rotateVecFromQuat(inout vec3 v, vec4 q){\n    float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n    float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n    float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n    float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n    v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n    v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n    v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\n\nvec3 rotateVecFromAxis(vec3 v, vec3 axis, float theta){\n    return cos(theta) * v + sin(theta) * cross(v, axis) + (1. - cos(theta)) * dot(v, axis) * axis;\n}\n\nvec3 rotateInLocalSpace(vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n    vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n    vec4 rotQuat = quatMultiply(viewQuat, q);\n    rotateVecFromQuat(pos, rotQuat);\n    return pos;\n}\n\nvoid rotateCorner(inout vec2 corner, float angle){\n    float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n    float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n    corner.x = xOS;\n    corner.y = yOS;\n}\n\nuniform Constants{\n    vec4 mainTiling_Offset;\n    vec4 frameTile_velLenScale;\n    vec4 scale;\n};\nuniform CCGlobal {\n  vec4 cc_time;\n  vec4 cc_screenSize;\n  vec4 cc_screenScale;\n  vec4 cc_nativeSize;\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_exposure;\n  vec4 cc_mainLitDir;\n  vec4 cc_mainLitColor;\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\nuniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n};\n\nout vec2 uv;\nout vec4 color;\n\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n    , mat4 viewInv\n#endif\n#if CC_USE_STRETCHED_BILLBOARD\n    , vec3 eye\n    , vec4 velocity\n    , float velocityScale\n    , float lengthScale\n    , float xIndex\n#endif\n) {\n#if CC_USE_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n    vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n    vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_USE_STRETCHED_BILLBOARD\n    vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n    vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n    pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_USE_HORIZONTAL_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = vec3(1, 0, 0);\n    vec3 camY = vec3(0, 0, -1);\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_USE_VERTICAL_BILLBOARD\n    vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n    rotateCorner(viewSpaceVert, q.z);\n    vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n    vec3 camY = vec3(0, 1, 0);\n    vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n    pos.xyz += offset;\n#else\n    pos.x += vertOffset.x;\n    pos.y += vertOffset.y;\n#endif\n}\n\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile){\n    vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n    aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if !CC_USE_MESH\n    vertIndex.y = 1. - vertIndex.y;\n#endif\n    return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\n\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n\n#if CC_USE_STRETCHED_BILLBOARD\n    in vec3 a_color1;\n#endif\n\n#if CC_USE_MESH\n    in vec3 a_texCoord3;\n    in vec3 a_normal;\n    in vec4 a_color1;\n#endif\n\nvec4 lpvs_main() {\n    vec3 compScale = scale.xyz * a_texCoord1;\n    vec4 pos = vec4(a_position, 1);\n#if CC_USE_STRETCHED_BILLBOARD\n    vec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n\n#if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_USE_STRETCHED_BILLBOARD\n        velocity = cc_matWorld * velocity;\n    #endif\n#endif\n\n#if !CC_USE_MESH\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n\n    #if CC_USE_BILLBOARD\n        vec3 rotEuler = a_texCoord2;\n    #elif CC_USE_STRETCHED_BILLBOARD\n        vec3 rotEuler = vec3(0.);\n    #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n        , cc_matViewInv\n    #endif\n    #if CC_USE_STRETCHED_BILLBOARD\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_texCoord.x\n    #endif\n    );\n\n    color = a_color;\n#else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n#endif\n    uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n\n    pos = cc_matViewProj * pos;\n\n    return pos;\n}\n\nvoid main() { gl_Position = lpvs_main(); }\n","frag":"\nprecision highp float;\nuniform CCGlobal {\n  vec4 cc_time;\n  vec4 cc_screenSize;\n  vec4 cc_screenScale;\n  vec4 cc_nativeSize;\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_exposure;\n  vec4 cc_mainLitDir;\n  vec4 cc_mainLitColor;\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\n\nvec3 SRGBToLinear(vec3 gamma)\n{\n\treturn pow(gamma, vec3(2.2));\n}\n\nvec3 LinearToSRGB(vec3 linear)\n{\n\treturn pow(linear, vec3(0.454545));\n}\n\nvec4 CCFragOutput(vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n\t#endif\n\treturn color;\n}\n\nin vec2 uv;\nin vec4 color;\n\nuniform sampler2D mainTexture;\n\nvec4 addSmooth () {\n  vec4 col = color * texture(mainTexture, uv);\n  col.rgb *= col.a;\n  return CCFragOutput(col);\n}\n\nvec4 premultiplied () {\n  vec4 col = color * texture(mainTexture, uv) * color.a;\n  return CCFragOutput(col);\n}\n\nout vec4 cc_FragColor;\nvoid main() { cc_FragColor = addSmooth(); }\n"},"glsl1":{"vert":"\nprecision highp float;\n\nvec4 quaternionFromAxisAngle(float angle, vec3 axis){\n    angle /= 2.;\n    float s = sin(angle);\n    vec4 res;\n    res.xyz = s * axis;\n    res.w = cos(angle);\n    return res;\n}\n\nvec4 quaternionFromAxis(vec3 xAxis,vec3 yAxis,vec3 zAxis){\n    mat3 m = mat3(xAxis,yAxis,zAxis);\n    float trace = m[0][0] + m[1][1] + m[2][2];\n    vec4 quat;\n\n    if (trace > 0.) {\n        float s = 0.5 / sqrt(trace + 1.0);\n        quat.w = 0.25 / s;\n        quat.x = (m[2][1] - m[1][2]) * s;\n        quat.y = (m[0][2] - m[2][0]) * s;\n        quat.z = (m[1][0] - m[0][1]) * s;\n    } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n        float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n        quat.w = (m[2][1] - m[1][2]) / s;\n        quat.x = 0.25 * s;\n        quat.y = (m[0][1] + m[1][0]) / s;\n        quat.z = (m[0][2] + m[2][0]) / s;\n    } else if (m[1][1] > m[2][2]) {\n        float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n        quat.w = (m[0][2] - m[2][0]) / s;\n        quat.x = (m[0][1] + m[1][0]) / s;\n        quat.y = 0.25 * s;\n        quat.z = (m[1][2] + m[2][1]) / s;\n    } else {\n        float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n        quat.w = (m[1][0] - m[0][1]) / s;\n        quat.x = (m[0][2] + m[2][0]) / s;\n        quat.y = (m[1][2] + m[2][1]) / s;\n        quat.z = 0.25 * s;\n    }\n\n    float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n    if (len > 0.) {\n        len = 1. / sqrt(len);\n        quat.x = quat.x * len;\n        quat.y = quat.y * len;\n        quat.z = quat.z * len;\n        quat.w = quat.w * len;\n    }\n\n    return quat;\n}\n\nvec4 quaternionFromEuler(vec3 angle){\n    float x = angle.x / 2.;\n    float y = angle.y / 2.;\n    float z = angle.z / 2.;\n\n    float sx = sin(x);\n    float cx = cos(x);\n    float sy = sin(y);\n    float cy = cos(y);\n    float sz = sin(z);\n    float cz = cos(z);\n\n    vec4 quat = vec4(0);\n\n    quat.x = sx * cy * cz + cx * sy * sz;\n    quat.y = cx * sy * cz + sx * cy * sz;\n    quat.z = cx * cy * sz - sx * sy * cz;\n    quat.w = cx * cy * cz - sx * sy * sz;\n\n    return quat;\n}\n\nmat4 matrixFromRT(vec4 q, vec3 p){\n    float x2 = q.x + q.x;\n    float y2 = q.y + q.y;\n    float z2 = q.z + q.z;\n    float xx = q.x * x2;\n    float xy = q.x * y2;\n    float xz = q.x * z2;\n    float yy = q.y * y2;\n    float yz = q.y * z2;\n    float zz = q.z * z2;\n    float wx = q.w * x2;\n    float wy = q.w * y2;\n    float wz = q.w * z2;\n\n    return mat4(\n        1. - (yy + zz), xy + wz, xz - wy, 0,\n        xy - wz, 1. - (xx + zz), yz + wx, 0,\n        xz + wy, yz - wx, 1. - (xx + yy), 0,\n        p.x, p.y, p.z, 1\n    );\n}\n\nmat4 matFromRTS(vec4 q, vec3 t, vec3 s){\n    float x = q.x, y = q.y, z = q.z, w = q.w;\n    float x2 = x + x;\n    float y2 = y + y;\n    float z2 = z + z;\n\n    float xx = x * x2;\n    float xy = x * y2;\n    float xz = x * z2;\n    float yy = y * y2;\n    float yz = y * z2;\n    float zz = z * z2;\n    float wx = w * x2;\n    float wy = w * y2;\n    float wz = w * z2;\n    float sx = s.x;\n    float sy = s.y;\n    float sz = s.z;\n\n    return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n        (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n        (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n        t.x, t.y, t.z, 1);\n}\n\nvoid scaleMatrix(inout mat4 m, float s){\n    m[0].xyz *= s;\n    m[1].xyz *= s;\n    m[2].xyz *= s;\n}\n\nvec4 quatMultiply(vec4 a, vec4 b){\n    vec4 quat;\n    quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return quat;\n}\n\nvoid rotateVecFromQuat(inout vec3 v, vec4 q){\n    float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n    float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n    float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n    float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n    v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n    v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n    v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\n\nvec3 rotateVecFromAxis(vec3 v, vec3 axis, float theta){\n    return cos(theta) * v + sin(theta) * cross(v, axis) + (1. - cos(theta)) * dot(v, axis) * axis;\n}\n\nvec3 rotateInLocalSpace(vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n    vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n    vec4 rotQuat = quatMultiply(viewQuat, q);\n    rotateVecFromQuat(pos, rotQuat);\n    return pos;\n}\n\nvoid rotateCorner(inout vec2 corner, float angle){\n    float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n    float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n    corner.x = xOS;\n    corner.y = yOS;\n}\n\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform mat4 cc_matView;\nuniform mat4 cc_matViewInv;\nuniform mat4 cc_matViewProj;\nuniform vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\n\nvarying vec2 uv;\nvarying vec4 color;\n\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n    , mat4 viewInv\n#endif\n#if CC_USE_STRETCHED_BILLBOARD\n    , vec3 eye\n    , vec4 velocity\n    , float velocityScale\n    , float lengthScale\n    , float xIndex\n#endif\n) {\n#if CC_USE_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n    vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n    vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_USE_STRETCHED_BILLBOARD\n    vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n    vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n    pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_USE_HORIZONTAL_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = vec3(1, 0, 0);\n    vec3 camY = vec3(0, 0, -1);\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_USE_VERTICAL_BILLBOARD\n    vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n    rotateCorner(viewSpaceVert, q.z);\n    vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n    vec3 camY = vec3(0, 1, 0);\n    vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n    pos.xyz += offset;\n#else\n    pos.x += vertOffset.x;\n    pos.y += vertOffset.y;\n#endif\n}\n\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile){\n    vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n    aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if !CC_USE_MESH\n    vertIndex.y = 1. - vertIndex.y;\n#endif\n    return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\n\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n\n#if CC_USE_STRETCHED_BILLBOARD\n    attribute vec3 a_color1;\n#endif\n\n#if CC_USE_MESH\n    attribute vec3 a_texCoord3;\n    attribute vec3 a_normal;\n    attribute vec4 a_color1;\n#endif\n\nvec4 lpvs_main() {\n    vec3 compScale = scale.xyz * a_texCoord1;\n    vec4 pos = vec4(a_position, 1);\n#if CC_USE_STRETCHED_BILLBOARD\n    vec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n\n#if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_USE_STRETCHED_BILLBOARD\n        velocity = cc_matWorld * velocity;\n    #endif\n#endif\n\n#if !CC_USE_MESH\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n\n    #if CC_USE_BILLBOARD\n        vec3 rotEuler = a_texCoord2;\n    #elif CC_USE_STRETCHED_BILLBOARD\n        vec3 rotEuler = vec3(0.);\n    #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n        , cc_matViewInv\n    #endif\n    #if CC_USE_STRETCHED_BILLBOARD\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_texCoord.x\n    #endif\n    );\n\n    color = a_color;\n#else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n#endif\n    uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n\n    pos = cc_matViewProj * pos;\n\n    return pos;\n}\n\nvoid main() { gl_Position = lpvs_main(); }\n","frag":"\nprecision highp float;\nuniform vec4 cc_exposure;\n\nvec3 SRGBToLinear(vec3 gamma)\n{\n\treturn pow(gamma, vec3(2.2));\n}\n\nvec3 LinearToSRGB(vec3 linear)\n{\n\treturn pow(linear, vec3(0.454545));\n}\n\nvec4 CCFragOutput(vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n\t#endif\n\treturn color;\n}\n\nvarying vec2 uv;\nvarying vec4 color;\n\nuniform sampler2D mainTexture;\n\nvec4 addSmooth () {\n  vec4 col = color * texture2D(mainTexture, uv);\n  col.rgb *= col.a;\n  return CCFragOutput(col);\n}\n\nvec4 premultiplied () {\n  vec4 col = color * texture2D(mainTexture, uv) * color.a;\n  return CCFragOutput(col);\n}\n\nvoid main() { gl_FragColor = addSmooth(); }\n"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"CC_USE_BILLBOARD","type":"boolean"},{"name":"CC_USE_STRETCHED_BILLBOARD","type":"boolean"},{"name":"CC_USE_HORIZONTAL_BILLBOARD","type":"boolean"},{"name":"CC_USE_VERTICAL_BILLBOARD","type":"boolean"},{"name":"CC_USE_MESH","type":"boolean"},{"name":"CC_USE_WORLD_SPACE","type":"boolean"},{"name":"CC_USE_HDR","type":"boolean"}],"blocks":[{"name":"Constants","members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1}],"defines":[],"binding":0}],"samplers":[{"name":"mainTexture","type":28,"count":1,"defines":[],"binding":30}],"name":"builtin-particle|particle-vs-legacy:lpvs_main|no-tint-fs:addSmooth"},{"hash":1226128191,"glsl3":{"vert":"\nprecision highp float;\n\nvec4 quaternionFromAxisAngle(float angle, vec3 axis){\n    angle /= 2.;\n    float s = sin(angle);\n    vec4 res;\n    res.xyz = s * axis;\n    res.w = cos(angle);\n    return res;\n}\n\nvec4 quaternionFromAxis(vec3 xAxis,vec3 yAxis,vec3 zAxis){\n    mat3 m = mat3(xAxis,yAxis,zAxis);\n    float trace = m[0][0] + m[1][1] + m[2][2];\n    vec4 quat;\n\n    if (trace > 0.) {\n        float s = 0.5 / sqrt(trace + 1.0);\n        quat.w = 0.25 / s;\n        quat.x = (m[2][1] - m[1][2]) * s;\n        quat.y = (m[0][2] - m[2][0]) * s;\n        quat.z = (m[1][0] - m[0][1]) * s;\n    } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n        float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n        quat.w = (m[2][1] - m[1][2]) / s;\n        quat.x = 0.25 * s;\n        quat.y = (m[0][1] + m[1][0]) / s;\n        quat.z = (m[0][2] + m[2][0]) / s;\n    } else if (m[1][1] > m[2][2]) {\n        float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n        quat.w = (m[0][2] - m[2][0]) / s;\n        quat.x = (m[0][1] + m[1][0]) / s;\n        quat.y = 0.25 * s;\n        quat.z = (m[1][2] + m[2][1]) / s;\n    } else {\n        float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n        quat.w = (m[1][0] - m[0][1]) / s;\n        quat.x = (m[0][2] + m[2][0]) / s;\n        quat.y = (m[1][2] + m[2][1]) / s;\n        quat.z = 0.25 * s;\n    }\n\n    float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n    if (len > 0.) {\n        len = 1. / sqrt(len);\n        quat.x = quat.x * len;\n        quat.y = quat.y * len;\n        quat.z = quat.z * len;\n        quat.w = quat.w * len;\n    }\n\n    return quat;\n}\n\nvec4 quaternionFromEuler(vec3 angle){\n    float x = angle.x / 2.;\n    float y = angle.y / 2.;\n    float z = angle.z / 2.;\n\n    float sx = sin(x);\n    float cx = cos(x);\n    float sy = sin(y);\n    float cy = cos(y);\n    float sz = sin(z);\n    float cz = cos(z);\n\n    vec4 quat = vec4(0);\n\n    quat.x = sx * cy * cz + cx * sy * sz;\n    quat.y = cx * sy * cz + sx * cy * sz;\n    quat.z = cx * cy * sz - sx * sy * cz;\n    quat.w = cx * cy * cz - sx * sy * sz;\n\n    return quat;\n}\n\nmat4 matrixFromRT(vec4 q, vec3 p){\n    float x2 = q.x + q.x;\n    float y2 = q.y + q.y;\n    float z2 = q.z + q.z;\n    float xx = q.x * x2;\n    float xy = q.x * y2;\n    float xz = q.x * z2;\n    float yy = q.y * y2;\n    float yz = q.y * z2;\n    float zz = q.z * z2;\n    float wx = q.w * x2;\n    float wy = q.w * y2;\n    float wz = q.w * z2;\n\n    return mat4(\n        1. - (yy + zz), xy + wz, xz - wy, 0,\n        xy - wz, 1. - (xx + zz), yz + wx, 0,\n        xz + wy, yz - wx, 1. - (xx + yy), 0,\n        p.x, p.y, p.z, 1\n    );\n}\n\nmat4 matFromRTS(vec4 q, vec3 t, vec3 s){\n    float x = q.x, y = q.y, z = q.z, w = q.w;\n    float x2 = x + x;\n    float y2 = y + y;\n    float z2 = z + z;\n\n    float xx = x * x2;\n    float xy = x * y2;\n    float xz = x * z2;\n    float yy = y * y2;\n    float yz = y * z2;\n    float zz = z * z2;\n    float wx = w * x2;\n    float wy = w * y2;\n    float wz = w * z2;\n    float sx = s.x;\n    float sy = s.y;\n    float sz = s.z;\n\n    return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n        (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n        (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n        t.x, t.y, t.z, 1);\n}\n\nvoid scaleMatrix(inout mat4 m, float s){\n    m[0].xyz *= s;\n    m[1].xyz *= s;\n    m[2].xyz *= s;\n}\n\nvec4 quatMultiply(vec4 a, vec4 b){\n    vec4 quat;\n    quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return quat;\n}\n\nvoid rotateVecFromQuat(inout vec3 v, vec4 q){\n    float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n    float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n    float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n    float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n    v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n    v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n    v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\n\nvec3 rotateVecFromAxis(vec3 v, vec3 axis, float theta){\n    return cos(theta) * v + sin(theta) * cross(v, axis) + (1. - cos(theta)) * dot(v, axis) * axis;\n}\n\nvec3 rotateInLocalSpace(vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n    vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n    vec4 rotQuat = quatMultiply(viewQuat, q);\n    rotateVecFromQuat(pos, rotQuat);\n    return pos;\n}\n\nvoid rotateCorner(inout vec2 corner, float angle){\n    float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n    float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n    corner.x = xOS;\n    corner.y = yOS;\n}\n\nuniform Constants{\n    vec4 mainTiling_Offset;\n    vec4 frameTile_velLenScale;\n    vec4 scale;\n};\nuniform CCGlobal {\n  vec4 cc_time;\n  vec4 cc_screenSize;\n  vec4 cc_screenScale;\n  vec4 cc_nativeSize;\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_exposure;\n  vec4 cc_mainLitDir;\n  vec4 cc_mainLitColor;\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\nuniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n};\n\nout vec2 uv;\nout vec4 color;\n\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n    , mat4 viewInv\n#endif\n#if CC_USE_STRETCHED_BILLBOARD\n    , vec3 eye\n    , vec4 velocity\n    , float velocityScale\n    , float lengthScale\n    , float xIndex\n#endif\n) {\n#if CC_USE_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n    vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n    vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_USE_STRETCHED_BILLBOARD\n    vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n    vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n    pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_USE_HORIZONTAL_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = vec3(1, 0, 0);\n    vec3 camY = vec3(0, 0, -1);\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_USE_VERTICAL_BILLBOARD\n    vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n    rotateCorner(viewSpaceVert, q.z);\n    vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n    vec3 camY = vec3(0, 1, 0);\n    vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n    pos.xyz += offset;\n#else\n    pos.x += vertOffset.x;\n    pos.y += vertOffset.y;\n#endif\n}\n\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile){\n    vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n    aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if !CC_USE_MESH\n    vertIndex.y = 1. - vertIndex.y;\n#endif\n    return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\n\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n\n#if CC_USE_STRETCHED_BILLBOARD\n    in vec3 a_color1;\n#endif\n\n#if CC_USE_MESH\n    in vec3 a_texCoord3;\n    in vec3 a_normal;\n    in vec4 a_color1;\n#endif\n\nvec4 lpvs_main() {\n    vec3 compScale = scale.xyz * a_texCoord1;\n    vec4 pos = vec4(a_position, 1);\n#if CC_USE_STRETCHED_BILLBOARD\n    vec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n\n#if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_USE_STRETCHED_BILLBOARD\n        velocity = cc_matWorld * velocity;\n    #endif\n#endif\n\n#if !CC_USE_MESH\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n\n    #if CC_USE_BILLBOARD\n        vec3 rotEuler = a_texCoord2;\n    #elif CC_USE_STRETCHED_BILLBOARD\n        vec3 rotEuler = vec3(0.);\n    #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n        , cc_matViewInv\n    #endif\n    #if CC_USE_STRETCHED_BILLBOARD\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_texCoord.x\n    #endif\n    );\n\n    color = a_color;\n#else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n#endif\n    uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n\n    pos = cc_matViewProj * pos;\n\n    return pos;\n}\n\nvoid main() { gl_Position = lpvs_main(); }\n","frag":"\nprecision highp float;\nuniform CCGlobal {\n  vec4 cc_time;\n  vec4 cc_screenSize;\n  vec4 cc_screenScale;\n  vec4 cc_nativeSize;\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_exposure;\n  vec4 cc_mainLitDir;\n  vec4 cc_mainLitColor;\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\n\nvec3 SRGBToLinear(vec3 gamma)\n{\n\treturn pow(gamma, vec3(2.2));\n}\n\nvec3 LinearToSRGB(vec3 linear)\n{\n\treturn pow(linear, vec3(0.454545));\n}\n\nvec4 CCFragOutput(vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n\t#endif\n\treturn color;\n}\n\nin vec2 uv;\nin vec4 color;\n\nuniform sampler2D mainTexture;\n\nvec4 addSmooth () {\n  vec4 col = color * texture(mainTexture, uv);\n  col.rgb *= col.a;\n  return CCFragOutput(col);\n}\n\nvec4 premultiplied () {\n  vec4 col = color * texture(mainTexture, uv) * color.a;\n  return CCFragOutput(col);\n}\n\nout vec4 cc_FragColor;\nvoid main() { cc_FragColor = premultiplied(); }\n"},"glsl1":{"vert":"\nprecision highp float;\n\nvec4 quaternionFromAxisAngle(float angle, vec3 axis){\n    angle /= 2.;\n    float s = sin(angle);\n    vec4 res;\n    res.xyz = s * axis;\n    res.w = cos(angle);\n    return res;\n}\n\nvec4 quaternionFromAxis(vec3 xAxis,vec3 yAxis,vec3 zAxis){\n    mat3 m = mat3(xAxis,yAxis,zAxis);\n    float trace = m[0][0] + m[1][1] + m[2][2];\n    vec4 quat;\n\n    if (trace > 0.) {\n        float s = 0.5 / sqrt(trace + 1.0);\n        quat.w = 0.25 / s;\n        quat.x = (m[2][1] - m[1][2]) * s;\n        quat.y = (m[0][2] - m[2][0]) * s;\n        quat.z = (m[1][0] - m[0][1]) * s;\n    } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n        float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n        quat.w = (m[2][1] - m[1][2]) / s;\n        quat.x = 0.25 * s;\n        quat.y = (m[0][1] + m[1][0]) / s;\n        quat.z = (m[0][2] + m[2][0]) / s;\n    } else if (m[1][1] > m[2][2]) {\n        float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n        quat.w = (m[0][2] - m[2][0]) / s;\n        quat.x = (m[0][1] + m[1][0]) / s;\n        quat.y = 0.25 * s;\n        quat.z = (m[1][2] + m[2][1]) / s;\n    } else {\n        float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n        quat.w = (m[1][0] - m[0][1]) / s;\n        quat.x = (m[0][2] + m[2][0]) / s;\n        quat.y = (m[1][2] + m[2][1]) / s;\n        quat.z = 0.25 * s;\n    }\n\n    float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n    if (len > 0.) {\n        len = 1. / sqrt(len);\n        quat.x = quat.x * len;\n        quat.y = quat.y * len;\n        quat.z = quat.z * len;\n        quat.w = quat.w * len;\n    }\n\n    return quat;\n}\n\nvec4 quaternionFromEuler(vec3 angle){\n    float x = angle.x / 2.;\n    float y = angle.y / 2.;\n    float z = angle.z / 2.;\n\n    float sx = sin(x);\n    float cx = cos(x);\n    float sy = sin(y);\n    float cy = cos(y);\n    float sz = sin(z);\n    float cz = cos(z);\n\n    vec4 quat = vec4(0);\n\n    quat.x = sx * cy * cz + cx * sy * sz;\n    quat.y = cx * sy * cz + sx * cy * sz;\n    quat.z = cx * cy * sz - sx * sy * cz;\n    quat.w = cx * cy * cz - sx * sy * sz;\n\n    return quat;\n}\n\nmat4 matrixFromRT(vec4 q, vec3 p){\n    float x2 = q.x + q.x;\n    float y2 = q.y + q.y;\n    float z2 = q.z + q.z;\n    float xx = q.x * x2;\n    float xy = q.x * y2;\n    float xz = q.x * z2;\n    float yy = q.y * y2;\n    float yz = q.y * z2;\n    float zz = q.z * z2;\n    float wx = q.w * x2;\n    float wy = q.w * y2;\n    float wz = q.w * z2;\n\n    return mat4(\n        1. - (yy + zz), xy + wz, xz - wy, 0,\n        xy - wz, 1. - (xx + zz), yz + wx, 0,\n        xz + wy, yz - wx, 1. - (xx + yy), 0,\n        p.x, p.y, p.z, 1\n    );\n}\n\nmat4 matFromRTS(vec4 q, vec3 t, vec3 s){\n    float x = q.x, y = q.y, z = q.z, w = q.w;\n    float x2 = x + x;\n    float y2 = y + y;\n    float z2 = z + z;\n\n    float xx = x * x2;\n    float xy = x * y2;\n    float xz = x * z2;\n    float yy = y * y2;\n    float yz = y * z2;\n    float zz = z * z2;\n    float wx = w * x2;\n    float wy = w * y2;\n    float wz = w * z2;\n    float sx = s.x;\n    float sy = s.y;\n    float sz = s.z;\n\n    return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n        (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n        (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n        t.x, t.y, t.z, 1);\n}\n\nvoid scaleMatrix(inout mat4 m, float s){\n    m[0].xyz *= s;\n    m[1].xyz *= s;\n    m[2].xyz *= s;\n}\n\nvec4 quatMultiply(vec4 a, vec4 b){\n    vec4 quat;\n    quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return quat;\n}\n\nvoid rotateVecFromQuat(inout vec3 v, vec4 q){\n    float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n    float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n    float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n    float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n    v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n    v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n    v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\n\nvec3 rotateVecFromAxis(vec3 v, vec3 axis, float theta){\n    return cos(theta) * v + sin(theta) * cross(v, axis) + (1. - cos(theta)) * dot(v, axis) * axis;\n}\n\nvec3 rotateInLocalSpace(vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n    vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n    vec4 rotQuat = quatMultiply(viewQuat, q);\n    rotateVecFromQuat(pos, rotQuat);\n    return pos;\n}\n\nvoid rotateCorner(inout vec2 corner, float angle){\n    float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n    float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n    corner.x = xOS;\n    corner.y = yOS;\n}\n\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform mat4 cc_matView;\nuniform mat4 cc_matViewInv;\nuniform mat4 cc_matViewProj;\nuniform vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\n\nvarying vec2 uv;\nvarying vec4 color;\n\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n    , mat4 viewInv\n#endif\n#if CC_USE_STRETCHED_BILLBOARD\n    , vec3 eye\n    , vec4 velocity\n    , float velocityScale\n    , float lengthScale\n    , float xIndex\n#endif\n) {\n#if CC_USE_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n    vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n    vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_USE_STRETCHED_BILLBOARD\n    vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n    vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n    pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_USE_HORIZONTAL_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = vec3(1, 0, 0);\n    vec3 camY = vec3(0, 0, -1);\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_USE_VERTICAL_BILLBOARD\n    vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n    rotateCorner(viewSpaceVert, q.z);\n    vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n    vec3 camY = vec3(0, 1, 0);\n    vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n    pos.xyz += offset;\n#else\n    pos.x += vertOffset.x;\n    pos.y += vertOffset.y;\n#endif\n}\n\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile){\n    vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n    aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if !CC_USE_MESH\n    vertIndex.y = 1. - vertIndex.y;\n#endif\n    return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\n\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n\n#if CC_USE_STRETCHED_BILLBOARD\n    attribute vec3 a_color1;\n#endif\n\n#if CC_USE_MESH\n    attribute vec3 a_texCoord3;\n    attribute vec3 a_normal;\n    attribute vec4 a_color1;\n#endif\n\nvec4 lpvs_main() {\n    vec3 compScale = scale.xyz * a_texCoord1;\n    vec4 pos = vec4(a_position, 1);\n#if CC_USE_STRETCHED_BILLBOARD\n    vec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n\n#if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_USE_STRETCHED_BILLBOARD\n        velocity = cc_matWorld * velocity;\n    #endif\n#endif\n\n#if !CC_USE_MESH\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n\n    #if CC_USE_BILLBOARD\n        vec3 rotEuler = a_texCoord2;\n    #elif CC_USE_STRETCHED_BILLBOARD\n        vec3 rotEuler = vec3(0.);\n    #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n        , cc_matViewInv\n    #endif\n    #if CC_USE_STRETCHED_BILLBOARD\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_texCoord.x\n    #endif\n    );\n\n    color = a_color;\n#else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n#endif\n    uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n\n    pos = cc_matViewProj * pos;\n\n    return pos;\n}\n\nvoid main() { gl_Position = lpvs_main(); }\n","frag":"\nprecision highp float;\nuniform vec4 cc_exposure;\n\nvec3 SRGBToLinear(vec3 gamma)\n{\n\treturn pow(gamma, vec3(2.2));\n}\n\nvec3 LinearToSRGB(vec3 linear)\n{\n\treturn pow(linear, vec3(0.454545));\n}\n\nvec4 CCFragOutput(vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n\t#endif\n\treturn color;\n}\n\nvarying vec2 uv;\nvarying vec4 color;\n\nuniform sampler2D mainTexture;\n\nvec4 addSmooth () {\n  vec4 col = color * texture2D(mainTexture, uv);\n  col.rgb *= col.a;\n  return CCFragOutput(col);\n}\n\nvec4 premultiplied () {\n  vec4 col = color * texture2D(mainTexture, uv) * color.a;\n  return CCFragOutput(col);\n}\n\nvoid main() { gl_FragColor = premultiplied(); }\n"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"CC_USE_BILLBOARD","type":"boolean"},{"name":"CC_USE_STRETCHED_BILLBOARD","type":"boolean"},{"name":"CC_USE_HORIZONTAL_BILLBOARD","type":"boolean"},{"name":"CC_USE_VERTICAL_BILLBOARD","type":"boolean"},{"name":"CC_USE_MESH","type":"boolean"},{"name":"CC_USE_WORLD_SPACE","type":"boolean"},{"name":"CC_USE_HDR","type":"boolean"}],"blocks":[{"name":"Constants","members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1}],"defines":[],"binding":0}],"samplers":[{"name":"mainTexture","type":28,"count":1,"defines":[],"binding":30}],"name":"builtin-particle|particle-vs-legacy:lpvs_main|no-tint-fs:premultiplied"}]},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"d2OvJs0qhEWak+VLPhzFHV","name":"title","rect":{"x":0,"y":0,"width":295,"height":95},"offset":{"x":0,"y":0},"originalSize":{"width":295,"height":95},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"d56g5pD5xNbbR1aYjizbW5","name":"zuanshi","rect":{"x":0,"y":3,"width":43,"height":36},"offset":{"x":-0.5,"y":-0.5},"originalSize":{"width":44,"height":41},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.Material","_effectAsset":{"__uuid__":"d1NGQ2rJZCcbhjH0/erZWw"},"_techIdx":"1","_defines":[{}],"_states":[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],"_props":[{"mainTexture":{"__uuid__":"4bSswo2w9HOq1PHLmZTsW+@6c48a"}}]},{"__type__":"cc.AnimationClip","_name":"items","speed":0.3,"_duration":0.35,"_keys":[[0,0.26666666666666666,0.35],[0,0.21666666666666667,0.3],[0,0.16666666666666666,0.25]],"curveDatas":{},"_curves":[{"modifiers":[{"__type__":"cc.HierachyModifier","path":"mode/wrap"},"position"],"data":{"keys":0,"values":[{"__type__":"cc.Vec3","y":-1000},{"__type__":"cc.Vec3","y":100},{"__type__":"cc.Vec3"}],"easingMethods":[null,"quadOut",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"suo/wrap"},"position"],"data":{"keys":1,"values":[{"__type__":"cc.Vec3","y":-850},{"__type__":"cc.Vec3","y":100},{"__type__":"cc.Vec3"}],"easingMethods":[null,"quadOut",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"gift/wrap"},"position"],"data":{"keys":2,"values":[{"__type__":"cc.Vec3","y":-700},{"__type__":"cc.Vec3","y":100},{"__type__":"cc.Vec3"}],"easingMethods":["cubicOut","quadOut",null]}}]},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"dc1wBZ2CtDnISyeHDW6c6z","name":"best_bg","rect":{"x":2,"y":2,"width":158,"height":51},"offset":{"x":0,"y":0},"originalSize":{"width":162,"height":55},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.AnimationClip","_name":"x_0","wrapMode":2,"_duration":0.6833333333333333,"_keys":[[0,0.3333333333333333,0.6833333333333333]],"curveDatas":{},"_curves":[{"modifiers":[{"__type__":"cc.ComponentModifier","component":"cc.CameraComponent"},"color"],"data":{"keys":0,"values":[{"__type__":"cc.Color","r":142,"g":225,"b":221},{"__type__":"cc.Color","r":211,"g":86,"b":86},{"__type__":"cc.Color","r":142,"g":225,"b":221}],"easingMethods":[null,null,null]}}]},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"e9JutowSJAY7jMVC+41pl1","name":"rank_bg","rect":{"x":4,"y":6,"width":576,"height":976},"offset":{"x":-0.5,"y":2.5},"originalSize":{"width":585,"height":993},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.AudioClip","_name":"click","_native":".mp3","_duration":0.20898,"_loadMode":0},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"f4d8rZooVLirpMjEn5noED","name":"title_rank","rect":{"x":29,"y":14,"width":252,"height":71},"offset":{"x":-6,"y":1},"originalSize":{"width":322,"height":101},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.ImageAsset","content":{"fmt":"0","w":0,"h":0}},{"__type__":"cc.SpriteFrame","content":{"image":"f5BjYv1QhJE7BAx5wF/o+K","name":"rijian","rect":{"x":1,"y":1,"width":58,"height":60},"offset":{"x":-0.5,"y":-0.5},"originalSize":{"width":61,"height":61},"rotated":false,"capInsets":[0,0,0,0]}},{"__type__":"cc.AnimationClip","_name":"hideItems","speed":0.6,"_duration":0.25,"_keys":[[0,0.16666666666666666],[0.05,0.21666666666666667],[0,0.16666666666666666],[0,0.16666666666666666],[0.05,0.21666666666666667],[0.05,0.21666666666666667],[0.21666666666666667,0.25],[0.05,0.21666666666666667],[0,0.16666666666666666],[0.21666666666666667,0.25]],"curveDatas":{},"_curves":[{"modifiers":[{"__type__":"cc.HierachyModifier","path":"gift/wrap"},"position"],"data":{"keys":0,"values":[{"__type__":"cc.Vec3"},{"__type__":"cc.Vec3","y":-100}],"easingMethods":["quadIn",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"suo/wrap"},"position"],"data":{"keys":1,"values":[{"__type__":"cc.Vec3"},{"__type__":"cc.Vec3","y":-100}],"easingMethods":["quadIn",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"gift/wrap"},"scale"],"data":{"keys":2,"values":[{"__type__":"cc.Vec3","x":1,"y":1,"z":1},{"__type__":"cc.Vec3","x":0.7,"y":0.7,"z":0.6}],"easingMethods":["quadIn",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"gift/wrap"},{"__type__":"cc.ComponentModifier","component":"cc.SpriteComponent"},"color"],"data":{"keys":3,"values":[{"__type__":"cc.Color","r":255,"g":255,"b":255},{"__type__":"cc.Color","r":255,"g":255,"b":255,"a":119}],"easingMethods":["quadIn",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"suo/wrap"},{"__type__":"cc.ComponentModifier","component":"cc.SpriteComponent"},"color"],"data":{"keys":4,"values":[{"__type__":"cc.Color","r":255,"g":255,"b":255},{"__type__":"cc.Color","r":255,"g":255,"b":255,"a":90}],"easingMethods":["quadIn",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"suo/wrap"},"scale"],"data":{"keys":5,"values":[{"__type__":"cc.Vec3","x":1,"y":1,"z":1},{"__type__":"cc.Vec3","x":0.8,"y":0.8,"z":0.8}],"easingMethods":["quadIn",null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"mode/wrap"},"active"],"data":{"keys":6,"values":[true,false],"easingMethods":[null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"suo/wrap"},"active"],"data":{"keys":7,"values":[true,false],"easingMethods":[null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"gift/wrap"},"active"],"data":{"keys":8,"values":[true,false],"easingMethods":[null,null]}},{"modifiers":[{"__type__":"cc.HierachyModifier","path":"mode/wrap"},"position"],"data":{"keys":9,"values":[{"__type__":"cc.Vec3"},{"__type__":"cc.Vec3","y":-30}],"easingMethods":["quadIn",null]}}]}]
